<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1Interval" kind="class" language="C++" prot="public">
    <compoundname>Hurricane::Interval</compoundname>
    <innerclass refid="classHurricane_1_1Interval_1_1CompareByMin" prot="public">Hurricane::Interval::CompareByMin</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Interval_1af64b91046ea2e69857c4553e661c4e31" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>DbU::Unit Hurricane::Interval::_vMin</definition>
        <argsstring></argsstring>
        <name>_vMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="95" column="17" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Interval_1aedafe2cbe2e503e8907b89e6c80737d4" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>DbU::Unit Hurricane::Interval::_vMax</definition>
        <argsstring></argsstring>
        <name>_vMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="96" column="17" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1Interval_1a02b04ad7ca380422098992fa8ff5f546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Interval::Interval</definition>
        <argsstring>(bool makeEmpty=true)</argsstring>
        <name>Interval</name>
        <param>
          <type>bool</type>
          <declname>makeEmpty</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor : the returned interval is empty if <bold>makeEmpy</bold> is set to <bold>true</bold> (default) or full span otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="52" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1ace4173705b4dbcf6c00cd83bb61c4d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Interval::Interval</definition>
        <argsstring>(const DbU::Unit &amp;)</argsstring>
        <name>Interval</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds an interval of null size centered on the value defined by <computeroutput>&lt;v&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="53" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a35e2ddc881a5b0c3ff8003d52f6298bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Interval::Interval</definition>
        <argsstring>(const DbU::Unit &amp;v1, const DbU::Unit &amp;v2)</argsstring>
        <name>Interval</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds the minimal interval enclosing the two values defined by <computeroutput>&lt;v1&gt;</computeroutput> and <computeroutput>&lt;v2&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="54" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a2db3923eb057dd19f5320d93a09750d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Interval::Interval</definition>
        <argsstring>(const Interval &amp;)</argsstring>
        <name>Interval</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="55" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a337b424cea8024f574726c3a2e4935b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::operator=</definition>
        <argsstring>(const Interval &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="57" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a1b022ac0ad975f168ac2b2689e6368c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::operator==</definition>
        <argsstring>(const Interval &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Equality operator.</para>
<para><simplesect kind="remark"><para>Two empty intervals are always different. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="58" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a2e5a64c485269fb08fb762e1eb3bc374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::operator!=</definition>
        <argsstring>(const Interval &amp;) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Difference operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="59" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a6e0deb1b38065375a78c7fd6885b5909" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
        <definition>const DbU::Unit &amp; Hurricane::Interval::getVMin</definition>
        <argsstring>() const</argsstring>
        <name>getVMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the VMin value : meaningful only for a non empty interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="61" column="30" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a2f5ec659fde913492f89dc215001acb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
        <definition>const DbU::Unit &amp; Hurricane::Interval::getVMax</definition>
        <argsstring>() const</argsstring>
        <name>getVMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the VMax value : meaningful only for a non empty interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="62" column="30" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1aaf7e0ec458f0675bbbc52fe33b19d216" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
        <definition>DbU::Unit &amp; Hurricane::Interval::getVMin</definition>
        <argsstring>()</argsstring>
        <name>getVMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="63" column="30" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1abe6eb4d828b82e65f06215c204892238" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
        <definition>DbU::Unit &amp; Hurricane::Interval::getVMax</definition>
        <argsstring>()</argsstring>
        <name>getVMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="64" column="30" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a6d12d0404054c7ccadab1afa6683a561" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>DbU::Unit Hurricane::Interval::getCenter</definition>
        <argsstring>() const</argsstring>
        <name>getCenter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the interval center value : meaningful only for a non empty interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="65" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a61d877fee3986f93c357910cd63f1caa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>DbU::Unit Hurricane::Interval::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the interval size : meaningful only for a non empty interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="66" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="111" bodyend="116"/>
        <references refid="classHurricane_1_1Interval_1a5bf0292743d02f861a194c48c823c7ce" compoundref="Interval_8h" startline="106" endline="106">isEmpty</references>
        <referencedby refid="classHurricane_1_1Interval_1abe66d75c0854ca0a76189801f0f7d0e3" compoundref="Interval_8h" startline="105" endline="105">getHalfSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1abe66d75c0854ca0a76189801f0f7d0e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>DbU::Unit Hurricane::Interval::getHalfSize</definition>
        <argsstring>() const</argsstring>
        <name>getHalfSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the half interval width : meaningful only for a non empty interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="67" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="105" bodyend="105"/>
        <references refid="classHurricane_1_1Interval_1a61d877fee3986f93c357910cd63f1caa" compoundref="Interval_8h" startline="111" endline="116">getSize</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1ac50b0e28faf03b54f81af109d942b569" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref></type>
        <definition>Interval Hurricane::Interval::getUnion</definition>
        <argsstring>(const Interval &amp;) const</argsstring>
        <name>getUnion</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the smallest enclosing interval containing the intervals <computeroutput>&lt;this&gt;</computeroutput> and <computeroutput>&lt;interval&gt;</computeroutput>. The returned interval may be empty if both are. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="68" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a73130b484cf43ff3b48488780a926ead" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref></type>
        <definition>Interval Hurricane::Interval::getIntersection</definition>
        <argsstring>(const Interval &amp;) const</argsstring>
        <name>getIntersection</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> interval representing the overlapping region. This interval is empty if either one of the two intervals is empty or if they are disjoint. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="69" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a5bf0292743d02f861a194c48c823c7ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the interval is empty, else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="70" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="106" bodyend="106"/>
        <referencedby refid="classHurricane_1_1Interval_1a61d877fee3986f93c357910cd63f1caa" compoundref="Interval_8h" startline="111" endline="116">getSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1ad3816db73aee0566e87234ccb4d4a2a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::isFull</definition>
        <argsstring>() const</argsstring>
        <name>isFull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="71" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1acfc27bb7442f359db7d04c72fa8edeb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::isPonctual</definition>
        <argsstring>() const</argsstring>
        <name>isPonctual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the interval is reduced to a value, else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="72" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a84beba7ba34552e12e6cb9e462a94765" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::contains</definition>
        <argsstring>(const DbU::Unit &amp;) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the interval is non empty and contains the value defined by <computeroutput>&lt;v&gt;</computeroutput> else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="73" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1af613eb138f2035f50cba47057a074b2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::contains</definition>
        <argsstring>(const Interval &amp;) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the two intervals are non empty and if the interval <computeroutput>&lt;this&gt;</computeroutput> contains the interval <computeroutput>&lt;interval&gt;</computeroutput>, else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="74" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1af4862b82fe5b37cdb3986a3b05245469" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::intersect</definition>
        <argsstring>(const Interval &amp;, bool strict=false) const</argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the two intervals are non empty and if they overlap, else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="75" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a38667e30116cc61a7a6e94c5394d2f28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::inferior</definition>
        <argsstring>(const Interval &amp;, bool strict=true) const</argsstring>
        <name>inferior</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="76" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a3dcabeeca0e91662cf911192353993df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::superior</definition>
        <argsstring>(const Interval &amp;, bool strict=true) const</argsstring>
        <name>superior</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="77" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a8f4cea19e31807bedeebb4811d4fe8d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Interval::isConstrainedBy</definition>
        <argsstring>(const Interval &amp;) const</argsstring>
        <name>isConstrainedBy</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="78" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a1e171021dcd5c0dc7e8afb0b2324c5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::makeEmpty</definition>
        <argsstring>()</argsstring>
        <name>makeEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transforms the interval into an empty one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="80" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a5dcff3b42f54dff7e23438f24a7b4150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval&amp; Hurricane::Interval::shrinkVMin</definition>
        <argsstring>(const DbU::Unit &amp;vMin)</argsstring>
        <name>shrinkVMin</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>vMin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="81" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a4d2a2be0053dd4b26dc2da3a533b6696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval&amp; Hurricane::Interval::shrinkVMax</definition>
        <argsstring>(const DbU::Unit &amp;vMax)</argsstring>
        <name>shrinkVMax</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>vMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="82" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a142c3ec37ebe74c253b3fe0039ef2143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::inflate</definition>
        <argsstring>(const DbU::Unit &amp;dv)</argsstring>
        <name>inflate</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>dv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expands (or contracts) the interval, if not empty, in each direction of the quantity <computeroutput>&lt;dv&gt;</computeroutput>. This quantity might be negative enough to transform it into an empty interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="83" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1ac311880a39d8e3db79bcbc5d3bb341a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::inflate</definition>
        <argsstring>(const DbU::Unit &amp;dvMin, const DbU::Unit &amp;dvMax)</argsstring>
        <name>inflate</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>dvMin</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>dvMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expands (or contracts) the interval, if not empty, on the left of the quantity <computeroutput>&lt;dvMin&gt;</computeroutput> and on the right of the quantity <computeroutput>&lt;dvMax&gt;</computeroutput>. Those quantities might be negative enough to transform it into an empty interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="84" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1ab37a2b3ad247a0a5a4e4946d2b777bec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::merge</definition>
        <argsstring>(const DbU::Unit &amp;)</argsstring>
        <name>merge</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expands the interval in order that it encloses the value defined <computeroutput>&lt;v&gt;</computeroutput>. If the interval was initially empty it becomes reduced to the enclosed value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="85" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a99c17b60766c1146ad380ac9981008f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::merge</definition>
        <argsstring>(const Interval &amp;)</argsstring>
        <name>merge</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expands the interval in order that it encloses, if not empty, the interval <computeroutput>&lt;interval&gt;</computeroutput>. If the interval <computeroutput>&lt;this&gt;</computeroutput> was initially empty it becomes reduced to the enclosed interval. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="86" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a0eeaaa7eb5b4ade89719c57a2c284909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::intersection</definition>
        <argsstring>(const DbU::Unit &amp;vMin, const DbU::Unit &amp;vMax)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>vMin</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>vMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The interval becomes the intersection of itself and <bold>[vMin,vMax]</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="87" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1aea3de219c9e8316e19d71d44428b8dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::intersection</definition>
        <argsstring>(const Interval &amp;)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
          <defname>interval</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The interval becomes the intersection of itself and <bold>interval</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="88" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1acf0aab51a74fe1216bfe112999066466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> &amp;</type>
        <definition>Interval &amp; Hurricane::Interval::translate</definition>
        <argsstring>(const DbU::Unit &amp;)</argsstring>
        <name>translate</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <defname>dv</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>translates the interval, if not empty, of the quantity <computeroutput>&lt;dv&gt;</computeroutput>.</para>
<para>Exemple : <programlisting><codeline><highlight class="normal">Interval<sp/>interval1<sp/>=<sp/>Interval(10,<sp/>100);</highlight></codeline>
<codeline><highlight class="normal">Interval<sp/>interval2<sp/>=<sp/>interval1;</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal">assert(interval1.translate(10)<sp/>==<sp/>interval2.inflate(-10,<sp/>10));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="89" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1aa013ac0d52cc5414076156356496c59c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Interval::_getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>_getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="91" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1a814d7605758e7d4211e2e1f7954cd2b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Interval::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="92" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Interval_1aedd27eb97515be0bbfd34521fa20804e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Record *</type>
        <definition>Record* Hurricane::Interval::_getRecord</definition>
        <argsstring>() const</argsstring>
        <name>_getRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="93" column="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classHurricane_1_1Interval" kindref="compound">Interval</ref> description (<bold>API</bold>) </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="classHurricane_1_1Interval_1secIntervalIntro">
<title>Introduction</title>
<para>Those objects represent intervals. They are defined by the values <bold>VMin</bold> and <bold>VMax</bold> which are representatives only when the interval is not empty. An interval is considered empty whenever it is not initialized or when it doesn&apos;t represent a real interval like the intersection of two disjoint intervals.</para>
</sect1>
<sect1 id="classHurricane_1_1Interval_1secIntervalRemark">
<title>Remark</title>
<para>All the function described in the chapter above return a reference on the modified interval, providing so the capability to apply to it a new modification. </para>
</sect1>
    </detaileddescription>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" line="44" column="3" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Interval.h" bodystart="44" bodyend="97"/>
    <listofallmembers>
      <member refid="classHurricane_1_1Interval_1aedd27eb97515be0bbfd34521fa20804e" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>_getRecord</name></member>
      <member refid="classHurricane_1_1Interval_1a814d7605758e7d4211e2e1f7954cd2b8" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1Interval_1aa013ac0d52cc5414076156356496c59c" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1Interval_1aedafe2cbe2e503e8907b89e6c80737d4" prot="private" virt="non-virtual"><scope>Hurricane::Interval</scope><name>_vMax</name></member>
      <member refid="classHurricane_1_1Interval_1af64b91046ea2e69857c4553e661c4e31" prot="private" virt="non-virtual"><scope>Hurricane::Interval</scope><name>_vMin</name></member>
      <member refid="classHurricane_1_1Interval_1a84beba7ba34552e12e6cb9e462a94765" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>contains</name></member>
      <member refid="classHurricane_1_1Interval_1af613eb138f2035f50cba47057a074b2e" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>contains</name></member>
      <member refid="classHurricane_1_1Interval_1a6d12d0404054c7ccadab1afa6683a561" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getCenter</name></member>
      <member refid="classHurricane_1_1Interval_1abe66d75c0854ca0a76189801f0f7d0e3" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getHalfSize</name></member>
      <member refid="classHurricane_1_1Interval_1a73130b484cf43ff3b48488780a926ead" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getIntersection</name></member>
      <member refid="classHurricane_1_1Interval_1a61d877fee3986f93c357910cd63f1caa" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getSize</name></member>
      <member refid="classHurricane_1_1Interval_1ac50b0e28faf03b54f81af109d942b569" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getUnion</name></member>
      <member refid="classHurricane_1_1Interval_1a2f5ec659fde913492f89dc215001acb2" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getVMax</name></member>
      <member refid="classHurricane_1_1Interval_1abe6eb4d828b82e65f06215c204892238" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getVMax</name></member>
      <member refid="classHurricane_1_1Interval_1a6e0deb1b38065375a78c7fd6885b5909" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getVMin</name></member>
      <member refid="classHurricane_1_1Interval_1aaf7e0ec458f0675bbbc52fe33b19d216" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>getVMin</name></member>
      <member refid="classHurricane_1_1Interval_1a38667e30116cc61a7a6e94c5394d2f28" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>inferior</name></member>
      <member refid="classHurricane_1_1Interval_1a142c3ec37ebe74c253b3fe0039ef2143" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>inflate</name></member>
      <member refid="classHurricane_1_1Interval_1ac311880a39d8e3db79bcbc5d3bb341a6" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>inflate</name></member>
      <member refid="classHurricane_1_1Interval_1af4862b82fe5b37cdb3986a3b05245469" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>intersect</name></member>
      <member refid="classHurricane_1_1Interval_1a0eeaaa7eb5b4ade89719c57a2c284909" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>intersection</name></member>
      <member refid="classHurricane_1_1Interval_1aea3de219c9e8316e19d71d44428b8dc4" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>intersection</name></member>
      <member refid="classHurricane_1_1Interval_1a02b04ad7ca380422098992fa8ff5f546" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>Interval</name></member>
      <member refid="classHurricane_1_1Interval_1ace4173705b4dbcf6c00cd83bb61c4d43" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>Interval</name></member>
      <member refid="classHurricane_1_1Interval_1a35e2ddc881a5b0c3ff8003d52f6298bb" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>Interval</name></member>
      <member refid="classHurricane_1_1Interval_1a2db3923eb057dd19f5320d93a09750d9" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>Interval</name></member>
      <member refid="classHurricane_1_1Interval_1a8f4cea19e31807bedeebb4811d4fe8d4" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>isConstrainedBy</name></member>
      <member refid="classHurricane_1_1Interval_1a5bf0292743d02f861a194c48c823c7ce" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>isEmpty</name></member>
      <member refid="classHurricane_1_1Interval_1ad3816db73aee0566e87234ccb4d4a2a8" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>isFull</name></member>
      <member refid="classHurricane_1_1Interval_1acfc27bb7442f359db7d04c72fa8edeb8" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>isPonctual</name></member>
      <member refid="classHurricane_1_1Interval_1a1e171021dcd5c0dc7e8afb0b2324c5ee" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>makeEmpty</name></member>
      <member refid="classHurricane_1_1Interval_1ab37a2b3ad247a0a5a4e4946d2b777bec" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>merge</name></member>
      <member refid="classHurricane_1_1Interval_1a99c17b60766c1146ad380ac9981008f7" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>merge</name></member>
      <member refid="classHurricane_1_1Interval_1a2e5a64c485269fb08fb762e1eb3bc374" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>operator!=</name></member>
      <member refid="classHurricane_1_1Interval_1a337b424cea8024f574726c3a2e4935b8" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1Interval_1a1b022ac0ad975f168ac2b2689e6368c3" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>operator==</name></member>
      <member refid="classHurricane_1_1Interval_1a4d2a2be0053dd4b26dc2da3a533b6696" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>shrinkVMax</name></member>
      <member refid="classHurricane_1_1Interval_1a5dcff3b42f54dff7e23438f24a7b4150" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>shrinkVMin</name></member>
      <member refid="classHurricane_1_1Interval_1a3dcabeeca0e91662cf911192353993df" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>superior</name></member>
      <member refid="classHurricane_1_1Interval_1acf0aab51a74fe1216bfe112999066466" prot="public" virt="non-virtual"><scope>Hurricane::Interval</scope><name>translate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
