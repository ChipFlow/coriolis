<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1Tabulation" kind="class" language="C++" prot="public">
    <compoundname>Hurricane::Tabulation</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Tabulation_1ae6cbe18a27e1b940360a8ecd4b6cf6d8" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Hurricane::Tabulation::_s</definition>
        <argsstring></argsstring>
        <name>_s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="41" column="21" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Tabulation_1af78ecc20eb41f9669613cc0cdaa8b8e1" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Hurricane::Tabulation::_n</definition>
        <argsstring></argsstring>
        <name>_n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="42" column="23" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a59932db80223de3ba630592218cb1005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Tabulation::Tabulation</definition>
        <argsstring>(const string &amp;s=&quot;   &quot;)</argsstring>
        <name>Tabulation</name>
        <param>
          <type>const string &amp;</type>
          <declname>s</declname>
          <defval>&quot;   &quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor : The string <computeroutput>&lt;s&gt;</computeroutput> represents the elementary tabulation (fixed by default to 3 space characters) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="47" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a78f765f6b4fc0e629f5d3babf7a785aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Tabulation::Tabulation</definition>
        <argsstring>(const Tabulation &amp;tabulation)</argsstring>
        <name>Tabulation</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref> &amp;</type>
          <declname>tabulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="49" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1aa549d938b7534f8eae8e8e954b1f3207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Tabulation::~Tabulation</definition>
        <argsstring>()</argsstring>
        <name>~Tabulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No description. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="54" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a33c4a5152580309407e3e2730f07c321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref> &amp;</type>
        <definition>Tabulation &amp; Hurricane::Tabulation::operator=</definition>
        <argsstring>(const Tabulation &amp;tabulation)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref> &amp;</type>
          <declname>tabulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="59" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1ad108353099b0755a45a18ec1ab6c0b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref> &amp;</type>
        <definition>Tabulation &amp; Hurricane::Tabulation::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Incrementation operator : returns the tabulation augmented of an elementary tabulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="61" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1ae609e34474086ac1b9748368d798acae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref></type>
        <definition>Tabulation Hurricane::Tabulation::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Postfixed version of the incrementation operator : the tabulation is augmented of an elementary tabulation, but returns the previous tabulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="62" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1af95446070605eb5d2ce89e9b8b3049be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref> &amp;</type>
        <definition>Tabulation &amp; Hurricane::Tabulation::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decrementation operator : returns the tabulation reduced of an elementary tabulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="63" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a9bdb9f81cd412ffcfb1da048b75cbd99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref></type>
        <definition>Tabulation Hurricane::Tabulation::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Postfixed version of the decrementation operator : the tabulation is reduced of an elementary tabulation, but returns the previous tabulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="64" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a967803718a8af9d4c993d06215ccad68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Hurricane::Tabulation::getWidth</definition>
        <argsstring>() const</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="69" column="22" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a36c56557cedcce41465b232ac10f0b57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Tabulation::_getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>_getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="70" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a1d95706965780ed90f2bc559554d18b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Tabulation::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="71" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a5abe778258e7bf3fc4244695cc9d5a02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Record *</type>
        <definition>Record* Hurricane::Tabulation::_getRecord</definition>
        <argsstring>() const</argsstring>
        <name>_getRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="72" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Tabulation_1a12fa951f128c3bba3da7e9689489470c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Slot *</type>
        <definition>Slot* Hurricane::Tabulation::_getSlot</definition>
        <argsstring>() const</argsstring>
        <name>_getSlot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="73" column="18" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" bodystart="73" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classHurricane_1_1Tabulation" kindref="compound">Tabulation</ref> description (<bold>API</bold>) </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="classHurricane_1_1Tabulation_1secTabulationIntro">
<title>Introduction</title>
<para>This object provides an indentation capability for printing readable texts.</para>
</sect1>
<sect1 id="classHurricane_1_1Tabulation_1secTabulationNewGlobalVariable">
<title>New global variable</title>
<para><programlisting><codeline><highlight class="normal">Tabulation<sp/>tab(&quot;<sp/><sp/><sp/><sp/>&quot;);</highlight></codeline>
</programlisting> Represents the global tabulation variable usable by all application programmers. The elementary tabulation being fixed to 3 space characters.</para>
</sect1>
<sect1 id="classHurricane_1_1Tabulation_1secTabulationUsage">
<title>Usage</title>
<para>Let us write a sample code of printing a succinct cell description : <programlisting><codeline><highlight class="normal">void<sp/>Describe(Cell*<sp/>cell)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>**********************</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>tab++<sp/>&lt;&lt;<sp/>&quot;cell<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>cellGetName()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>if<sp/>(!cellGetInstances().IsEmpty())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>tab++<sp/>&lt;&lt;<sp/>&quot;instances<sp/>:<sp/>{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for_each_instance(instance,<sp/>cellGetInstances())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>tab<sp/>&lt;&lt;<sp/>&quot;instance<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>instanceGetName()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_for;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>--tab<sp/>&lt;&lt;<sp/>&quot;}&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>if<sp/>(!cellGetNets().IsEmpty())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>tab++<sp/>&lt;&lt;<sp/>&quot;nets<sp/>:<sp/>{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for_each_net(net,<sp/>cellGetNets())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>tab++<sp/>&lt;&lt;<sp/>&quot;net<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>netGetName()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!netGetPlugs().IsEmpty())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>tab++<sp/>&lt;&lt;<sp/>&quot;plugs<sp/>:<sp/>{&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for_each_plug(plug,<sp/>netGetPlugs())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>tab<sp/>&lt;&lt;<sp/>&quot;master_net<sp/>:<sp/>&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>plugGetMasterNet()GetName()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_for;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>--tab<sp/>&lt;&lt;<sp/>&quot;}&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_for;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>--tab<sp/>&lt;&lt;<sp/>&quot;}&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>--tab;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> The call : <programlisting><codeline><highlight class="normal">Describe(cell);</highlight></codeline>
</programlisting> Will print the result in the following form : <programlisting><codeline><highlight class="normal">cell<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>instances<sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>nets<sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>net<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugs<sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master_net<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master_net<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>net<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugs<sp/>:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master_net<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>master_net<sp/>:<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="classHurricane_1_1Tabulation_1secTabulationRemark">
<title>Remark</title>
<para>Of course this automatic indentation works also in recursive mode. Its main interest is for that purpose because you don&apos;t need to transfer through recursive function calls an additional argument for controling the indentation when formating print-outs. </para>
</sect1>
    </detaileddescription>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" line="35" column="1" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Tabulation.h" bodystart="35" bodyend="75"/>
    <listofallmembers>
      <member refid="classHurricane_1_1Tabulation_1a5abe778258e7bf3fc4244695cc9d5a02" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>_getRecord</name></member>
      <member refid="classHurricane_1_1Tabulation_1a12fa951f128c3bba3da7e9689489470c" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>_getSlot</name></member>
      <member refid="classHurricane_1_1Tabulation_1a1d95706965780ed90f2bc559554d18b2" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1Tabulation_1a36c56557cedcce41465b232ac10f0b57" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1Tabulation_1af78ecc20eb41f9669613cc0cdaa8b8e1" prot="private" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>_n</name></member>
      <member refid="classHurricane_1_1Tabulation_1ae6cbe18a27e1b940360a8ecd4b6cf6d8" prot="private" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>_s</name></member>
      <member refid="classHurricane_1_1Tabulation_1a967803718a8af9d4c993d06215ccad68" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>getWidth</name></member>
      <member refid="classHurricane_1_1Tabulation_1ad108353099b0755a45a18ec1ab6c0b7c" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>operator++</name></member>
      <member refid="classHurricane_1_1Tabulation_1ae609e34474086ac1b9748368d798acae" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>operator++</name></member>
      <member refid="classHurricane_1_1Tabulation_1af95446070605eb5d2ce89e9b8b3049be" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>operator--</name></member>
      <member refid="classHurricane_1_1Tabulation_1a9bdb9f81cd412ffcfb1da048b75cbd99" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>operator--</name></member>
      <member refid="classHurricane_1_1Tabulation_1a33c4a5152580309407e3e2730f07c321" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1Tabulation_1a59932db80223de3ba630592218cb1005" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>Tabulation</name></member>
      <member refid="classHurricane_1_1Tabulation_1a78f765f6b4fc0e629f5d3babf7a785aa" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>Tabulation</name></member>
      <member refid="classHurricane_1_1Tabulation_1aa549d938b7534f8eae8e8e954b1f3207" prot="public" virt="non-virtual"><scope>Hurricane::Tabulation</scope><name>~Tabulation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
