<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1DebugSession" kind="class" language="C++" prot="public">
    <compoundname>Hurricane::DebugSession</compoundname>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classHurricane_1_1DebugSession_1a3d7bb04d62dd085fa2b783c81003f5e1" prot="protected" static="yes" mutable="no">
        <type><ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> *</type>
        <definition>DebugSession* Hurricane::DebugSession::_singleton</definition>
        <argsstring></argsstring>
        <name>_singleton</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="81" column="37" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classHurricane_1_1DebugSession_1a3f471e3dff6e975bc0d1a4b0144902d9" prot="protected" static="no" mutable="no">
        <type>set&lt; const void * &gt;</type>
        <definition>set&lt;const void*&gt; Hurricane::DebugSession::_symbols</definition>
        <argsstring></argsstring>
        <name>_symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="82" column="25" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1DebugSession_1afc1d65a9d9124ff8bb14e4f76f5f3a56" prot="protected" static="no" mutable="no">
        <type>stack&lt; pair&lt; int, int &gt; &gt;</type>
        <definition>stack&lt; pair&lt;int,int&gt; &gt; Hurricane::DebugSession::_levels</definition>
        <argsstring></argsstring>
        <name>_levels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="83" column="21" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a52ba379cd07aa8b775e797b63f1f35e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> *</type>
        <definition>static DebugSession* Hurricane::DebugSession::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="59" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1aa521af7ece2d9505ec154754f9dff986" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> *</type>
        <definition>DebugSession * Hurricane::DebugSession::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="60" column="34" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a0b008c0eb9a0337416465caf7431a81e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::DebugSession::isTraced</definition>
        <argsstring>(const void *symbol)</argsstring>
        <name>isTraced</name>
        <param>
          <type>const void *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\Returns <bold>true</bold> if the <computeroutput>symbol</computeroutput> is in the <ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> symbol table. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="61" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ab3d4ec4e6dad505308ea8f3dbbd7a911" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Hurricane::DebugSession::isTracedNet</definition>
        <argsstring>(const Net *)</argsstring>
        <name>isTracedNet</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Net" kindref="compound">Net</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="62" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1aa7ee4a8517bc4a99c37f0a9ae26b9620" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::addToTrace</definition>
        <argsstring>(const void *symbol)</argsstring>
        <name>addToTrace</name>
        <param>
          <type>const void *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the <computeroutput>symbol</computeroutput> to the table of traced symbols. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="63" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ab7f9fbef88775e509ae7b127e524b100" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::addToTrace</definition>
        <argsstring>(const Cell *, const Name &amp;)</argsstring>
        <name>addToTrace</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref> *</type>
          <defname>cell</defname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the <ref refid="classHurricane_1_1Net" kindref="compound">Net</ref> <computeroutput>name</computeroutput> from <computeroutput><ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref></computeroutput> to the table of traced symbols. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="64" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="144" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ad155133ecd4e04d025f22e222fe8bb4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::addToTrace</definition>
        <argsstring>(const Net *)</argsstring>
        <name>addToTrace</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Net" kindref="compound">Net</ref> *</type>
          <defname>net</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="65" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ac12865b68d1acfd85cd48d4d44d9c4fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::open</definition>
        <argsstring>(int minLevel, int maxLevel)</argsstring>
        <name>open</name>
        <param>
          <type>int</type>
          <declname>minLevel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>minLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum debug/tracelevel (&gt;=). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum debug/tracelevel (&lt;).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Change the current debug level to (minLevel,maxLevel). The previous range is stacked and will be restored when this session will be closed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="66" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="97" bodyend="106"/>
        <references refid="clasststream_1abb7ecc2e0ddeab5442d52acb2ea5fd64" compoundref="Commons_8h" startline="1051" endline="1051">tstream::getMaxLevel</references>
        <references refid="clasststream_1a86cfc3fc7bfa7d0064d27dea74d6888d" compoundref="Commons_8h" startline="1050" endline="1050">tstream::getMinLevel</references>
        <references refid="clasststream_1a75cb778234d7b49d9e89c73e6efcd132" compoundref="Commons_8h" startline="1053" endline="1053">tstream::setMaxLevel</references>
        <references refid="clasststream_1a0dad8cbc8fc5611b788f55c75a20a88e" compoundref="Commons_8h" startline="1052" endline="1052">tstream::setMinLevel</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a655f87fd8c8e20f287dea2a6d8fca556" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::open</definition>
        <argsstring>(const void *symbol, int minLevel, int maxLevel)</argsstring>
        <name>open</name>
        <param>
          <type>const void *</type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minLevel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>symbol to match. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum debug/tracelevel (&gt;=). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum debug/tracelevel (&lt;).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Change the current debug level to (minLevel,maxLevel) only if <computeroutput>symbol</computeroutput> is traced. If the <computeroutput>symbol</computeroutput> is traced, then the new levels pair is stacked, otherwise the current level are stacked (we duplicate the top of the stack). This session, successful or not, must be closed as any other. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="67" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="109" bodyend="125"/>
        <references refid="clasststream_1abb7ecc2e0ddeab5442d52acb2ea5fd64" compoundref="Commons_8h" startline="1051" endline="1051">tstream::getMaxLevel</references>
        <references refid="clasststream_1a86cfc3fc7bfa7d0064d27dea74d6888d" compoundref="Commons_8h" startline="1050" endline="1050">tstream::getMinLevel</references>
        <references refid="clasststream_1a75cb778234d7b49d9e89c73e6efcd132" compoundref="Commons_8h" startline="1053" endline="1053">tstream::setMaxLevel</references>
        <references refid="clasststream_1a0dad8cbc8fc5611b788f55c75a20a88e" compoundref="Commons_8h" startline="1052" endline="1052">tstream::setMinLevel</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ac880eca99eeec60c669c0696f495ac42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close a <ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> and restore the previous trace levels. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="68" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="128" bodyend="137"/>
        <references refid="clasststream_1a75cb778234d7b49d9e89c73e6efcd132" compoundref="Commons_8h" startline="1053" endline="1053">tstream::setMaxLevel</references>
        <references refid="clasststream_1a0dad8cbc8fc5611b788f55c75a20a88e" compoundref="Commons_8h" startline="1052" endline="1052">tstream::setMinLevel</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1afdc178c9d91f1d2d904166821c677177" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::DebugSession::_isTraced</definition>
        <argsstring>(const void *symbol) const</argsstring>
        <name>_isTraced</name>
        <param>
          <type>const void *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="70" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ad37ff33e320532992765c24ea29ef416" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::_addToTrace</definition>
        <argsstring>(const void *symbol)</argsstring>
        <name>_addToTrace</name>
        <param>
          <type>const void *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="71" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1addf771602d22cbcd7cf3c3079437bd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::_addToTrace</definition>
        <argsstring>(const Cell *, const Name &amp;)</argsstring>
        <name>_addToTrace</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref> *</type>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="72" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a73db57ffaa165859f6c1fb001f2f5128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::DebugSession::_addToTrace</definition>
        <argsstring>(const Net *net)</argsstring>
        <name>_addToTrace</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Net" kindref="compound">Net</ref> *</type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="73" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a5234dd6df09e181a6961c130ba25c831" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Record *</type>
        <definition>Record* Hurricane::DebugSession::_getRecord</definition>
        <argsstring>() const</argsstring>
        <name>_getRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="75" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a7540059118c0d5cf6bbd255702d676f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::DebugSession::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="76" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a08ddd9066169060f84de7f9dbbd3a20b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::DebugSession::_getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>_getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="77" column="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a13a55b78c1f9d9a68db150c978a87835" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::DebugSession::DebugSession</definition>
        <argsstring>()</argsstring>
        <name>DebugSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="87" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1a68470cd6d2309678e1f8fe1dae3e81b1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::DebugSession::~DebugSession</definition>
        <argsstring>()</argsstring>
        <name>~DebugSession</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="88" column="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ac854c7176c3656f1aeb2040ce948b69d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::DebugSession::DebugSession</definition>
        <argsstring>(const DebugSession &amp;)</argsstring>
        <name>DebugSession</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="90" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1DebugSession_1ac3d3b7774d56d58d1703bef2847a605d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> &amp;</type>
        <definition>DebugSession&amp; Hurricane::DebugSession::operator=</definition>
        <argsstring>(const DebugSession &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="91" column="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Enable/Disable trace information (<computeroutput>API</computeroutput>). </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> provide a way to control what and when text send through the cdebug stream is printed. cdebug display selectively the trace/debug messages between a <computeroutput>minLevel</computeroutput> and a <computeroutput>maxLevel</computeroutput> : <formula id="0">\[ minLevel \leq level &lt; maxLevel \]</formula></para>
<para><ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> manage a stack of <computeroutput></computeroutput>(min,max) pairs so multiple session can be opened. On opening a new session the <computeroutput></computeroutput>(min,max) pair is pushed on the top of the stack and define the active range of trace levels. On closing, the pair is removed from the top and the previous range became active again. Do not forget to match any opening with a closing.</para>
<para>In addition to the levels, a <ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> also can be triggered by a <emphasis>symbol</emphasis> (i.e. a <computeroutput></computeroutput>(void*) pointer). The <ref refid="classHurricane_1_1DebugSession" kindref="compound">DebugSession</ref> has contains a user managed table of symbols. When, in opening a session, you give a symbol, the session will actually changes the trace levels only if the symbol is in the internal table. Otherwise a session is still opened <emphasis>but</emphasis> it will keep the current trace levels. So, in any case the session must be closed.</para>
<sect1 id="classHurricane_1_1DebugSession_1secTraceLevels">
<title>Trace Levels</title>
<para>To avoid mixing messages between different parts of the software, the following allotments have been done:</para>
<para><center> <table rows="35" cols="3" width="50%"><caption>Trace/Debug level allotments (provisional)</caption>
<row>
<entry thead="yes" colspan="3"><para><bold>C++</bold> / Coriolis </para>
</entry></row>
<row>
<entry thead="yes"><para><bold>Tool/Library</bold> </para>
</entry><entry thead="yes"><para><bold>Minimum</bold> </para>
</entry><entry thead="yes"><para><bold>Maximum</bold> </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="namespaceHurricane" kindref="compound">Hurricane</ref> </para>
</entry><entry thead="no"><para><computeroutput>0</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>19</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>CRL Core </para>
</entry><entry thead="no"><para><computeroutput>100</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>110</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Anabatic </para>
</entry><entry thead="no"><para><computeroutput>110</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>120</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Etesian </para>
</entry><entry thead="no"><para><computeroutput>120</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>130</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Knik </para>
</entry><entry thead="no"><para><computeroutput>130</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>140</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Katabatic </para>
</entry><entry thead="no"><para><computeroutput>140</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>150</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Kite </para>
</entry><entry thead="no"><para><computeroutput>150</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>160</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Solstice </para>
</entry><entry thead="no"><para><computeroutput>160</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>170</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Equinox </para>
</entry><entry thead="no"><para><computeroutput>170</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>180</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Unicorn </para>
</entry><entry thead="no"><para><computeroutput>180</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>190</computeroutput> </para>
</entry></row>
<row>
<entry thead="yes" colspan="3"><para><bold>C++</bold> / Analog </para>
</entry></row>
<row>
<entry thead="yes"><para><bold>Tool/Library</bold> </para>
</entry><entry thead="yes"><para><bold>Minimum</bold> </para>
</entry><entry thead="yes"><para><bold>Maximum</bold> </para>
</entry></row>
<row>
<entry thead="no"><para>Analog </para>
</entry><entry thead="no"><para><computeroutput>500</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>510</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>oroshi </para>
</entry><entry thead="no"><para><computeroutput>510</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>520</computeroutput> </para>
</entry></row>
<row>
<entry thead="yes" colspan="3"><para><bold>Python</bold> Wrappers / Coriolis </para>
</entry></row>
<row>
<entry thead="yes"><para><bold>Tool/Library</bold> </para>
</entry><entry thead="yes"><para><bold>Minimum</bold> </para>
</entry><entry thead="yes"><para><bold>Maximum</bold> </para>
</entry></row>
<row>
<entry thead="no"><para>Isobar </para>
</entry><entry thead="no"><para><computeroutput>20</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>30</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>CRL Core/Python </para>
</entry><entry thead="no"><para><computeroutput>30</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>32</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Anabatic/Python </para>
</entry><entry thead="no"><para><computeroutput>32</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>34</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Etesian/Python </para>
</entry><entry thead="no"><para><computeroutput>34</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>36</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Knik/Python </para>
</entry><entry thead="no"><para><computeroutput>36</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>38</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Katabatic/Python </para>
</entry><entry thead="no"><para><computeroutput>38</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>40</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Kite/Python </para>
</entry><entry thead="no"><para><computeroutput>40</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>42</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Solstice/Python </para>
</entry><entry thead="no"><para><computeroutput>42</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>44</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Equinox/Python </para>
</entry><entry thead="no"><para><computeroutput>44</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>46</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>Unicorn/Python </para>
</entry><entry thead="no"><para><computeroutput>46</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>48</computeroutput> </para>
</entry></row>
<row>
<entry thead="yes" colspan="3"><para><bold>Python</bold> Wrappers / Analog </para>
</entry></row>
<row>
<entry thead="yes"><para><bold>Tool/Library</bold> </para>
</entry><entry thead="yes"><para><bold>Minimum</bold> </para>
</entry><entry thead="yes"><para><bold>Maximum</bold> </para>
</entry></row>
<row>
<entry thead="no"><para>Analog </para>
</entry><entry thead="no"><para><computeroutput>48</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>50</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>oroshi/ÿthon </para>
</entry><entry thead="no"><para><computeroutput>50</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>51</computeroutput> </para>
</entry></row>
<row>
<entry thead="yes" colspan="3"><para><bold>Special</bold> levels </para>
</entry></row>
<row>
<entry thead="no"><para>Determinim check </para>
</entry><entry thead="no"><para><computeroutput>9000</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>9001</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para>JSON parsers/drivers</para>
</entry><entry thead="no"><para><computeroutput>19</computeroutput> </para>
</entry><entry thead="no"><para><computeroutput>20</computeroutput> </para>
</entry></row>
</table>
</center> </para>
</sect1>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Hurricane::DebugSession</label>
        <link refid="classHurricane_1_1DebugSession"/>
        <childnode refid="1" relation="usage">
          <edgelabel>_singleton</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" line="55" column="3" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/DebugSession.h" bodystart="55" bodyend="92"/>
    <listofallmembers>
      <member refid="classHurricane_1_1DebugSession_1ad37ff33e320532992765c24ea29ef416" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_addToTrace</name></member>
      <member refid="classHurricane_1_1DebugSession_1addf771602d22cbcd7cf3c3079437bd4e" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_addToTrace</name></member>
      <member refid="classHurricane_1_1DebugSession_1a73db57ffaa165859f6c1fb001f2f5128" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_addToTrace</name></member>
      <member refid="classHurricane_1_1DebugSession_1a5234dd6df09e181a6961c130ba25c831" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_getRecord</name></member>
      <member refid="classHurricane_1_1DebugSession_1a7540059118c0d5cf6bbd255702d676f4" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1DebugSession_1a08ddd9066169060f84de7f9dbbd3a20b" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1DebugSession_1afdc178c9d91f1d2d904166821c677177" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_isTraced</name></member>
      <member refid="classHurricane_1_1DebugSession_1afc1d65a9d9124ff8bb14e4f76f5f3a56" prot="protected" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_levels</name></member>
      <member refid="classHurricane_1_1DebugSession_1a3d7bb04d62dd085fa2b783c81003f5e1" prot="protected" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_singleton</name></member>
      <member refid="classHurricane_1_1DebugSession_1a3f471e3dff6e975bc0d1a4b0144902d9" prot="protected" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>_symbols</name></member>
      <member refid="classHurricane_1_1DebugSession_1aa7ee4a8517bc4a99c37f0a9ae26b9620" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>addToTrace</name></member>
      <member refid="classHurricane_1_1DebugSession_1ab7f9fbef88775e509ae7b127e524b100" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>addToTrace</name></member>
      <member refid="classHurricane_1_1DebugSession_1ad155133ecd4e04d025f22e222fe8bb4f" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>addToTrace</name></member>
      <member refid="classHurricane_1_1DebugSession_1ac880eca99eeec60c669c0696f495ac42" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>close</name></member>
      <member refid="classHurricane_1_1DebugSession_1a52ba379cd07aa8b775e797b63f1f35e1" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>create</name></member>
      <member refid="classHurricane_1_1DebugSession_1a13a55b78c1f9d9a68db150c978a87835" prot="protected" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>DebugSession</name></member>
      <member refid="classHurricane_1_1DebugSession_1ac854c7176c3656f1aeb2040ce948b69d" prot="private" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>DebugSession</name></member>
      <member refid="classHurricane_1_1DebugSession_1aa521af7ece2d9505ec154754f9dff986" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>get</name></member>
      <member refid="classHurricane_1_1DebugSession_1a0b008c0eb9a0337416465caf7431a81e" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>isTraced</name></member>
      <member refid="classHurricane_1_1DebugSession_1ab3d4ec4e6dad505308ea8f3dbbd7a911" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>isTracedNet</name></member>
      <member refid="classHurricane_1_1DebugSession_1ac12865b68d1acfd85cd48d4d44d9c4fc" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>open</name></member>
      <member refid="classHurricane_1_1DebugSession_1a655f87fd8c8e20f287dea2a6d8fca556" prot="public" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>open</name></member>
      <member refid="classHurricane_1_1DebugSession_1ac3d3b7774d56d58d1703bef2847a605d" prot="private" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1DebugSession_1a68470cd6d2309678e1f8fe1dae3e81b1" prot="protected" virt="non-virtual"><scope>Hurricane::DebugSession</scope><name>~DebugSession</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
