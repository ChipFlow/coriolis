<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1Path" kind="class" language="C++" prot="public">
    <compoundname>Hurricane::Path</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Path_1aa38f9de09c7e7fec41a24f0e7e33afa9" prot="private" static="no" mutable="no">
        <type>SharedPath *</type>
        <definition>SharedPath* Hurricane::Path::_sharedPath</definition>
        <argsstring></argsstring>
        <name>_sharedPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="41" column="25" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1Path_1ad3fe735dcb2ce630f89b98c039663c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::Path</definition>
        <argsstring>(SharedPath *sharedPath=NULL)</argsstring>
        <name>Path</name>
        <param>
          <type>SharedPath *</type>
          <declname>sharedPath</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor : the path is then void.</para>
<para><simplesect kind="remark"><para>This path has no instance and will be the tail terminal path of any other path. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="46" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1aa1a70f922b9b6a78fd3ac9b7bd94d158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::Path</definition>
        <argsstring>(Instance *instance)</argsstring>
        <name>Path</name>
        <param>
          <type><ref refid="classHurricane_1_1Instance" kindref="compound">Instance</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds the path made up of this unique instance.</para>
<para><simplesect kind="par"><title>Caution: If the instance is null an exception is thrown. </title><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="47" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a3197a114ed98117dde0f41d999917775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::Path</definition>
        <argsstring>(Instance *headInstance, const Path &amp;tailPath)</argsstring>
        <name>Path</name>
        <param>
          <type><ref refid="classHurricane_1_1Instance" kindref="compound">Instance</ref> *</type>
          <declname>headInstance</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>tailPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds the path with head instance <computeroutput>&lt;headInstance&gt;</computeroutput> and tail path <computeroutput>&lt;tailPath&gt;</computeroutput>.</para>
<para><simplesect kind="par"><title>Caution: If the instance is null, or if the tail path is not </title><para>compatible with this head instance, an exception is thrown.</para>
</simplesect>
<simplesect kind="remark"><para>The head instance and the tail path are compatible if the tail path is void or if the owner cell of the tail path is the model cell referenced by the head instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="48" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1add5812ab3bb9a4cf6dbe49d1e4e932cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::Path</definition>
        <argsstring>(const Path &amp;headPath, Instance *tailInstance)</argsstring>
        <name>Path</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>headPath</declname>
        </param>
        <param>
          <type><ref refid="classHurricane_1_1Instance" kindref="compound">Instance</ref> *</type>
          <declname>tailInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds the path with head path <computeroutput>&lt;headPath&gt;</computeroutput> and tail instance <computeroutput>&lt;tailInstance&gt;</computeroutput>.</para>
<para><simplesect kind="par"><title>Caution: If the tail instance is null, or if the head path is not </title><para>compatible with this tail instance, an exception is thrown.</para>
</simplesect>
<simplesect kind="remark"><para>The tail instance and the head path are compatible if the owner cell of the tail instance is the master cell of the head path (which is recall it, the model cell referenced by the last instance of the head path) or if the head path is empty (then compatible with any non null instance). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="49" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a6e3d331f5c5a0dcb91d10516a4beb6bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::Path</definition>
        <argsstring>(Cell *cell, const string &amp;pathName)</argsstring>
        <name>Path</name>
        <param>
          <type><ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>pathName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds the path representing the logic sequence of instance names described as a character string. Each instance name is separated from the preceeding one by a special delimiter (which can be defined with the function <bold>setPathNameSeparator</bold> to be defined later). The cell given in argument defines where sarts the search (at each new instance identified, we go to its model cell to pursue the search within the <computeroutput>&lt;pathName&gt;</computeroutput>).</para>
<para><simplesect kind="par"><title>Caution: If the cell is null or if the name doesn&apos;t correspond to an </title><para>existing hierarchical instanciation path an exception is thrown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="50" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a957d6400880980c98bce89848179968e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::Path</definition>
        <argsstring>(const Path &amp;headPath, const Path &amp;tailPath)</argsstring>
        <name>Path</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>headPath</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>tailPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="51" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a8db875f788013ec5ad8ed517cf1e1715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::Path</definition>
        <argsstring>(const Path &amp;path)</argsstring>
        <name>Path</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="52" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a6226639f50213598ffad86031afe69ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Path::~Path</definition>
        <argsstring>()</argsstring>
        <name>~Path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>No description. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="57" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a1355dd2d191d492a1b5e5180324a9f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
        <definition>Path &amp; Hurricane::Path::operator=</definition>
        <argsstring>(const Path &amp;path)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="62" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a16a5b6529dd4424c55518ac9f687862f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Path::operator==</definition>
        <argsstring>(const Path &amp;path) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Two pathes are equal if they have the same head instance and if their tail pathes are equal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="64" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a182e82a2bc3f41262e1e76fcdc5a0c1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Path::operator!=</definition>
        <argsstring>(const Path &amp;path) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Two pathes are differents either if they have different head instance or if the tail pathes differ. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="65" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a5bf33d2d9e3e7d46db770e26c09be90b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Path::operator&lt;</definition>
        <argsstring>(const Path &amp;path) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This comparator has no particular signification. It is just defined to be abble to use a STL set of pathes which need a comparator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="67" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1afddde635f302cee0a215ca364e9689b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Instance" kindref="compound">Instance</ref> *</type>
        <definition>Instance * Hurricane::Path::getHeadInstance</definition>
        <argsstring>() const</argsstring>
        <name>getHeadInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the head instance or NULL if the path is void. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="74" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1af0b27566643cc252d9a0feb1709d3180" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Path" kindref="compound">Path</ref></type>
        <definition>Path Hurricane::Path::getTailPath</definition>
        <argsstring>() const</argsstring>
        <name>getTailPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the tail path or a void path if the path has 1 or 0 hierarchical depth. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="75" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1ae89034b297b27545cf3865e0cfa31f3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Path" kindref="compound">Path</ref></type>
        <definition>Path Hurricane::Path::getHeadPath</definition>
        <argsstring>() const</argsstring>
        <name>getHeadPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the head path or a void path if the path has 1 or 0 hierarchical depth. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="76" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a1f9350514c4751b54b2f01082a93e3bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Instance" kindref="compound">Instance</ref> *</type>
        <definition>Instance * Hurricane::Path::getTailInstance</definition>
        <argsstring>() const</argsstring>
        <name>getTailInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the tail instance or NULL if the path is void. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="77" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a97ff25c53f4e7bdacb7cb8a58adf6499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Path::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> a string defined by the concatenation of instance names separated by a special character (which can be set up by the function <bold>setPathNameSeparator</bold>).</para>
<para><bold>Returns:</bold> the string <bold>&quot;&quot;</bold> when the path is void. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="78" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a0954eb842af9d863ea701aa0b681412e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Hurricane::Path::getOwnerCell</definition>
        <argsstring>() const</argsstring>
        <name>getOwnerCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retruns the cell owning the head instance or NULL if the path is void. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="79" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a3f4a865f570375ec5b6e5cb487369696" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Hurricane::Path::getMasterCell</definition>
        <argsstring>() const</argsstring>
        <name>getMasterCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the master cell referenced by the last instance of the path or NULL if the path is void. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="80" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1af820422a686ab35d611a6c1969e37e90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceHurricane_1ac9436b03a2926f34ad6863deae2baadc" kindref="member">Instances</ref></type>
        <definition>Instances Hurricane::Path::getInstances</definition>
        <argsstring>() const</argsstring>
        <name>getInstances</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the collection of instances defining the path. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="81" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1af48dc47810f65e7aba6ee8f24ed8a09e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Transformation" kindref="compound">Transformation</ref></type>
        <definition>Transformation Hurricane::Path::getTransformation</definition>
        <argsstring>(const Transformation &amp;transformation=Transformation()) const</argsstring>
        <name>getTransformation</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>transformation</declname>
          <defval><ref refid="classHurricane_1_1Transformation" kindref="compound">Transformation</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the transform resulting of the composition of all transforms associated with the different instances of the path, applied to the given <computeroutput>&lt;transformation&gt;</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="82" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1aeddd764b4b10c72630ee81119614935a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Path::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the path is void and else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="87" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1afa052a1f715d832a2ab26e2c657c7e8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Hurricane::Path::contains</definition>
        <argsstring>(Instance *) const</argsstring>
        <name>contains</name>
        <param>
          <type><ref refid="classHurricane_1_1Instance" kindref="compound">Instance</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="88" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1ae1dfb32030b1428c416db9a62d845345" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Path::makeEmpty</definition>
        <argsstring>()</argsstring>
        <name>makeEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="93" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1acacd2ce7a72afae4e4cf74a80376ac41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Path::getCompactString</definition>
        <argsstring>(bool showBrackets=true) const</argsstring>
        <name>getCompactString</name>
        <param>
          <type>bool</type>
          <declname>showBrackets</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="99" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a276db7aee4defb8092f8fa917e3ea991" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Path::getJsonString</definition>
        <argsstring>(unsigned long flags) const</argsstring>
        <name>getJsonString</name>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="100" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a62ad85c046c6315dc53df34316e117a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Path::_getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>_getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="101" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1ad4d785a7152f1cb3849dafba03430b1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Path::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="102" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1aed20c7ec7720986aef07b999aee4eeaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Record *</type>
        <definition>Record* Hurricane::Path::_getRecord</definition>
        <argsstring>() const</argsstring>
        <name>_getRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="103" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1ab9ea9e5783bb2a1e702d9f7f24370a34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SharedPath *</type>
        <definition>SharedPath* Hurricane::Path::_getSharedPath</definition>
        <argsstring>() const</argsstring>
        <name>_getSharedPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="105" column="24" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classHurricane_1_1Path_1ac63015239df43b8c44a6d74a262eb3a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char Hurricane::Path::getNameSeparator</definition>
        <argsstring>()</argsstring>
        <name>getNameSeparator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the special character used as a separator between the instance names of a path. By default it is the &apos;.&apos; (point). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="72" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Path_1a505231a4bf7e8041c7a01e482505cd7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Path::setNameSeparator</definition>
        <argsstring>(char nameSeparator)</argsstring>
        <name>setNameSeparator</name>
        <param>
          <type>char</type>
          <declname>nameSeparator</declname>
          <defname>separator</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function sets the special character used as a separator between the instance names of a path (choose it carrefully, it must not appear in any instance name). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="94" column="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> description (<bold>API</bold>) </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="classHurricane_1_1Path_1secPathIntro">
<title>Introduction</title>
<para>Pathes are objects representing an ordered sequence of instances through the hierarchy.</para>
<para>They are represented by a head instance which defines the path start and tail path which defines the remaining path with respect to the cell model referenced by the head instance.</para>
<para>terminology A non void path begins by an instance : this instance pertains to the top caller cell, named OwnerCell. On the other hand the path ends by an instance (which may be the same) : this instance refers to its model which will be named the MasterCell.</para>
</sect1>
<sect1 id="classHurricane_1_1Path_1secPathRemarks">
<title>Remarks</title>
<para>The different constructors (appart the one which analyses the names of the path) as welle as the destructor and the different operators are very efficient because the tail pathes being shared, only pointer assignments and pointer comparisons are realized. </para>
</sect1>
    </detaileddescription>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" line="35" column="1" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Path.h" bodystart="35" bodyend="107"/>
    <listofallmembers>
      <member refid="classHurricane_1_1Path_1aed20c7ec7720986aef07b999aee4eeaa" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>_getRecord</name></member>
      <member refid="classHurricane_1_1Path_1ab9ea9e5783bb2a1e702d9f7f24370a34" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>_getSharedPath</name></member>
      <member refid="classHurricane_1_1Path_1ad4d785a7152f1cb3849dafba03430b1c" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1Path_1a62ad85c046c6315dc53df34316e117a7" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1Path_1aa38f9de09c7e7fec41a24f0e7e33afa9" prot="private" virt="non-virtual"><scope>Hurricane::Path</scope><name>_sharedPath</name></member>
      <member refid="classHurricane_1_1Path_1afa052a1f715d832a2ab26e2c657c7e8a" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>contains</name></member>
      <member refid="classHurricane_1_1Path_1acacd2ce7a72afae4e4cf74a80376ac41" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getCompactString</name></member>
      <member refid="classHurricane_1_1Path_1afddde635f302cee0a215ca364e9689b5" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getHeadInstance</name></member>
      <member refid="classHurricane_1_1Path_1ae89034b297b27545cf3865e0cfa31f3d" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getHeadPath</name></member>
      <member refid="classHurricane_1_1Path_1af820422a686ab35d611a6c1969e37e90" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getInstances</name></member>
      <member refid="classHurricane_1_1Path_1a276db7aee4defb8092f8fa917e3ea991" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getJsonString</name></member>
      <member refid="classHurricane_1_1Path_1a3f4a865f570375ec5b6e5cb487369696" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getMasterCell</name></member>
      <member refid="classHurricane_1_1Path_1a97ff25c53f4e7bdacb7cb8a58adf6499" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getName</name></member>
      <member refid="classHurricane_1_1Path_1ac63015239df43b8c44a6d74a262eb3a2" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getNameSeparator</name></member>
      <member refid="classHurricane_1_1Path_1a0954eb842af9d863ea701aa0b681412e" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getOwnerCell</name></member>
      <member refid="classHurricane_1_1Path_1a1f9350514c4751b54b2f01082a93e3bf" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getTailInstance</name></member>
      <member refid="classHurricane_1_1Path_1af0b27566643cc252d9a0feb1709d3180" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getTailPath</name></member>
      <member refid="classHurricane_1_1Path_1af48dc47810f65e7aba6ee8f24ed8a09e" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>getTransformation</name></member>
      <member refid="classHurricane_1_1Path_1aeddd764b4b10c72630ee81119614935a" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>isEmpty</name></member>
      <member refid="classHurricane_1_1Path_1ae1dfb32030b1428c416db9a62d845345" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>makeEmpty</name></member>
      <member refid="classHurricane_1_1Path_1a182e82a2bc3f41262e1e76fcdc5a0c1e" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>operator!=</name></member>
      <member refid="classHurricane_1_1Path_1a5bf33d2d9e3e7d46db770e26c09be90b" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>operator&lt;</name></member>
      <member refid="classHurricane_1_1Path_1a1355dd2d191d492a1b5e5180324a9f8f" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1Path_1a16a5b6529dd4424c55518ac9f687862f" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>operator==</name></member>
      <member refid="classHurricane_1_1Path_1ad3fe735dcb2ce630f89b98c039663c23" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>Path</name></member>
      <member refid="classHurricane_1_1Path_1aa1a70f922b9b6a78fd3ac9b7bd94d158" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>Path</name></member>
      <member refid="classHurricane_1_1Path_1a3197a114ed98117dde0f41d999917775" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>Path</name></member>
      <member refid="classHurricane_1_1Path_1add5812ab3bb9a4cf6dbe49d1e4e932cb" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>Path</name></member>
      <member refid="classHurricane_1_1Path_1a6e3d331f5c5a0dcb91d10516a4beb6bc" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>Path</name></member>
      <member refid="classHurricane_1_1Path_1a957d6400880980c98bce89848179968e" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>Path</name></member>
      <member refid="classHurricane_1_1Path_1a8db875f788013ec5ad8ed517cf1e1715" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>Path</name></member>
      <member refid="classHurricane_1_1Path_1a505231a4bf7e8041c7a01e482505cd7a" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>setNameSeparator</name></member>
      <member refid="classHurricane_1_1Path_1a6226639f50213598ffad86031afe69ff" prot="public" virt="non-virtual"><scope>Hurricane::Path</scope><name>~Path</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
