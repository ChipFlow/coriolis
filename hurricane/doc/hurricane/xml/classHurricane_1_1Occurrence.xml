<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1Occurrence" kind="class" language="C++" prot="public">
    <compoundname>Hurricane::Occurrence</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Occurrence_1aa10cbd07b45e371d3ec829c38e1e6cff" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1Entity" kindref="compound">Entity</ref> *</type>
        <definition>Entity* Hurricane::Occurrence::_entity</definition>
        <argsstring></argsstring>
        <name>_entity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="45" column="21" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Occurrence_1a7e213da6a66c32db9ce76b7b1576bb26" prot="private" static="no" mutable="no">
        <type>SharedPath *</type>
        <definition>SharedPath* Hurricane::Occurrence::_sharedPath</definition>
        <argsstring></argsstring>
        <name>_sharedPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="46" column="25" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1aa4162a36dc984d71caf962e55b991ed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Occurrence::Occurrence</definition>
        <argsstring>(const Entity *entity=NULL)</argsstring>
        <name>Occurrence</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Entity" kindref="compound">Entity</ref> *</type>
          <declname>entity</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds an occurrence refering to an entity through a void path, in some way it is equivalent to the entity itself.</para>
<para><simplesect kind="remark"><para>If the entity is null the occurrence is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="51" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1afedb5d75781a9a4f0a19d37f0e8c88a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Occurrence::Occurrence</definition>
        <argsstring>(const Entity *entity, const Path &amp;path)</argsstring>
        <name>Occurrence</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Entity" kindref="compound">Entity</ref> *</type>
          <declname>entity</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1Path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds an occurrence refering to an entity through a path (possibly void).</para>
<para><simplesect kind="par"><title>Caution: If the entity is null or if the path is uncompatible with the </title><para>entity, an exception is thrown.</para>
</simplesect>
<simplesect kind="remark"><para>The entity and the path are compatible if the path is void or if the master cell of the path is the cell owning the entity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="52" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1affec5f25b9c2efa2bcde02e9c4833626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Occurrence::Occurrence</definition>
        <argsstring>(const Occurrence &amp;occurrence)</argsstring>
        <name>Occurrence</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref> &amp;</type>
          <declname>occurrence</declname>
          <defname>Occurrence</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="53" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a389472d0d5b121a4e091511c8003cb47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref> &amp;</type>
        <definition>Occurrence &amp; Hurricane::Occurrence::operator=</definition>
        <argsstring>(const Occurrence &amp;occurrence)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref> &amp;</type>
          <declname>occurrence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="58" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1accae7f6611cb5985478d58fc793dc3e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Occurrence::operator==</definition>
        <argsstring>(const Occurrence &amp;occurrence) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref> &amp;</type>
          <declname>occurrence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Two occurrences are equal if both are valid and refer to the same entity and have indentical instanciation pathes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="60" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a39edad19edeef964e5340381360c0add" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Occurrence::operator!=</definition>
        <argsstring>(const Occurrence &amp;occurrence) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref> &amp;</type>
          <declname>occurrence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Two occurrences are different if a least one is either invalid or both don&apos;t refer to the same entity or have differing instanciation pathes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="61" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a2f1668ccce22799c99eb3a02e522c204" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Occurrence::operator&lt;</definition>
        <argsstring>(const Occurrence &amp;occurrence) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref> &amp;</type>
          <declname>occurrence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This comparator has no particular signification. It is just defined to be abble to use a STL set of occurrences which need a comparator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="63" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1ac121005d5d3bc0837f66c0de4265b0c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Entity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * Hurricane::Occurrence::getEntity</definition>
        <argsstring>() const</argsstring>
        <name>getEntity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the referenced entity or NULL if the occurrence is invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="68" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1adeab556806a83e8cf3ad6ecc08f3a83e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Path" kindref="compound">Path</ref></type>
        <definition>const Path &amp; Hurricane::Occurrence::getPath</definition>
        <argsstring>() const</argsstring>
        <name>getPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the hierarchical instanciation path of the occurrence (possibly void, but always void when the occurrence id invalid). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="69" column="18" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1affced95f35617150b5811c3784b20d93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Hurricane::Occurrence::getOwnerCell</definition>
        <argsstring>() const</argsstring>
        <name>getOwnerCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the owner cell of the occurrence or NULL if the occurrence is invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="70" column="18"/>
        <referencedby refid="classHurricane_1_1HyperNet_1a5a818c5887d1d8dd2e0a59e8a57c02d7" compoundref="HyperNet_8h" startline="56" endline="56">Hurricane::HyperNet::getCell</referencedby>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a5caeab69e23907909b3deb60ff26df15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Cell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Hurricane::Occurrence::getMasterCell</definition>
        <argsstring>() const</argsstring>
        <name>getMasterCell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the cell owning the referenced entity or NULL if the occurrence is invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="71" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1ab2b36b219037a2310f6527a35a9a266f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Property" kindref="compound">Property</ref> *</type>
        <definition>Property * Hurricane::Occurrence::getProperty</definition>
        <argsstring>(const Name &amp;name) const</argsstring>
        <name>getProperty</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the property named <computeroutput>&lt;name&gt;</computeroutput> if it exists or NULL if not (or if the occurrence is invalid). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="72" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1acbf59d6c01804e01f66d076c149abb49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceHurricane_1afd7bca6dad4be54b7c03b0463e6c0004" kindref="member">Properties</ref></type>
        <definition>Properties Hurricane::Occurrence::getProperties</definition>
        <argsstring>() const</argsstring>
        <name>getProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the collection of properties attached to the occurrence (always empty if the occurrence is invalid). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="73" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a1b6a10a037417a9d8c003ad03996aa57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref></type>
        <definition>Occurrence Hurricane::Occurrence::getNetOccurrence</definition>
        <argsstring>() const</argsstring>
        <name>getNetOccurrence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="74" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a6c808dba6637c716075e0887c5f25518" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box Hurricane::Occurrence::getBoundingBox</definition>
        <argsstring>() const</argsstring>
        <name>getBoundingBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the bounding box of the occurrence (within the coordinate sysem of the owner cell) if it is valid or else the empty box. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="75" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1aee7a0aef982c3b45e2d58830ffa8ef20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box Hurricane::Occurrence::getBoundingBox</definition>
        <argsstring>(const BasicLayer *) const</argsstring>
        <name>getBoundingBox</name>
        <param>
          <type>const <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="76" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1ade38e5da7eb5d8701cd3a8f252cdf62f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Occurrence::isValid</definition>
        <argsstring>() const</argsstring>
        <name>isValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the occurrence is valid, else <bold>false</bold> (the occurrence refers no entity). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="81" column="18" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a1ebc8e1f1417d6e8fa2434fd11f96e7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Occurrence::isBelowTerminalNetlist</definition>
        <argsstring>() const</argsstring>
        <name>isBelowTerminalNetlist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="82" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a0c1c6cfdf47f33166d108e2311d74e48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Occurrence::hasProperty</definition>
        <argsstring>() const</argsstring>
        <name>hasProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the occurrence owns some property else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="83" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a0daa3964699f63f7fbec8720dd40b960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Occurrence::makeInvalid</definition>
        <argsstring>()</argsstring>
        <name>makeInvalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="88" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1aaea0bdc4f5bb4012eb52f3abe20525be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Occurrence::put</definition>
        <argsstring>(Property *property)</argsstring>
        <name>put</name>
        <param>
          <type><ref refid="classHurricane_1_1Property" kindref="compound">Property</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the property <computeroutput>&lt;property&gt;</computeroutput> to the occurrence property set. The property being named, if another property already exists in the set it will be, in a first step, detached from this set.</para>
<para><simplesect kind="remark"><para>Does nothing if the occurrence already owns this property object.</para>
</simplesect>
<simplesect kind="par"><title>Caution: If the occurrence is invalid or the property null, an </title><para>exception is thrown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="89" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a774404aa5eb01371f64cf5fda3f3ffbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Occurrence::remove</definition>
        <argsstring>(Property *property)</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="classHurricane_1_1Property" kindref="compound">Property</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes the property <computeroutput>&lt;property&gt;</computeroutput> from the occurrence property set.</para>
<para><simplesect kind="remark"><para>Does nothing if the occurrence doesn&apos;t own this property object.</para>
</simplesect>
<simplesect kind="par"><title>Caution: If the occurrence is invalid or the property null, an </title><para>exception is thrown. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="90" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a8d86755bf50cbc7fd2849b039a372b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Occurrence::removeProperty</definition>
        <argsstring>(const Name &amp;name)</argsstring>
        <name>removeProperty</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes the property of name <computeroutput>&lt;name&gt;</computeroutput> if it exists.</para>
<para><simplesect kind="par"><title>Caution: If the occurrence is invalid an exception is thrown. </title><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="91" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1ae9b269d39f3f68645d6d396d7ab5d8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Occurrence::clearProperties</definition>
        <argsstring>()</argsstring>
        <name>clearProperties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes all properties attached to the occurrence. As a consequence, the occurrence is deleted.</para>
<para><simplesect kind="par"><title>Caution: If the occurrence is invalid an exception is thrown. </title><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="92" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a6eaa3586d2d9a09995d39b4839a75593" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Occurrence::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="97" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a1b7b438adc38dfb97207627cbd4fe235" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Occurrence::_getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>_getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="98" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a7c2926a2c914a91f8f192f01e20d0128" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Occurrence::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="99" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a7061bf98df2ee2e7b93f3af5dff73801" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Occurrence::getCompactString</definition>
        <argsstring>() const</argsstring>
        <name>getCompactString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="100" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a8081e29382577a4eb1a4692ceb89b59c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Occurrence::toJson</definition>
        <argsstring>(JsonWriter *) const</argsstring>
        <name>toJson</name>
        <param>
          <type>JsonWriter *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="101" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a0e012a17dc5110f24f7f39b2888ec350" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Record *</type>
        <definition>Record* Hurricane::Occurrence::_getRecord</definition>
        <argsstring>() const</argsstring>
        <name>_getRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="102" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a46e38d50f713c221121405c3e97a0e2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SharedPath *</type>
        <definition>SharedPath* Hurricane::Occurrence::_getSharedPath</definition>
        <argsstring>() const</argsstring>
        <name>_getSharedPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="103" column="24" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Occurrence_1a90ae95f593eaed236e1c691025d23786" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Quark" kindref="compound">Quark</ref> *</type>
        <definition>Quark* Hurricane::Occurrence::_getQuark</definition>
        <argsstring>() const</argsstring>
        <name>_getQuark</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="104" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classHurricane_1_1Occurrence" kindref="compound">Occurrence</ref> description (<bold>API</bold>) </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="classHurricane_1_1Occurrence_1secOccurrenceIntro">
<title>Introduction</title>
<para>Occurrences are objects providing the capability to designate any entity of the hierarchical assembly as if this one was virtually unfolded.</para>
<para>For that purpose they handle, on one side the referenced entity and on the other side the hierarchical instanciation path which refers to the cell containing this entity.</para>
<para>Those occurrences are handy, volatile and very light objects. Two different occurrences may designate the same entity of the virtually unfolded data structure, simplifying the creation and deletion of those objects.</para>
<para>Anyway it is possible to attach properties to each occurrence.</para>
<para>Of course, those properties are securely stored in order to access them unambiguously.</para>
<para>Therefore, if a property is placed on an occurrence, we have access to it from a different occurrence provided it designates the same entity of the virtually unfolded data structure.</para>
</sect1>
<sect1 id="classHurricane_1_1Occurrence_1secOccurrenceTerminology">
<title>Terminology</title>
<para>An occurrence is said invalid if it refers no entity.</para>
<para>When it is valid, an occurrence has : an <bold>OwnerCell</bold> which is either the cell owning the path if this one is non void, else the cell owning the entity itself. and a <bold>MasterCell</bold> which is always the cell owning the entity.</para>
</sect1>
<sect1 id="classHurricane_1_1Occurrence_1secOccurrenceRemarks">
<title>Remarks</title>
<para>All constructors, the destructor and the different operators are very efficient. </para>
</sect1>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Hurricane::Occurrence</label>
        <link refid="classHurricane_1_1Occurrence"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_entity</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Hurricane::Entity</label>
        <link refid="classHurricane_1_1Entity"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Hurricane::DBo</label>
        <link refid="classHurricane_1_1DBo"/>
      </node>
    </collaborationgraph>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" line="39" column="1" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Occurrence.h" bodystart="39" bodyend="106"/>
    <listofallmembers>
      <member refid="classHurricane_1_1Occurrence_1aa10cbd07b45e371d3ec829c38e1e6cff" prot="private" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>_entity</name></member>
      <member refid="classHurricane_1_1Occurrence_1a90ae95f593eaed236e1c691025d23786" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>_getQuark</name></member>
      <member refid="classHurricane_1_1Occurrence_1a0e012a17dc5110f24f7f39b2888ec350" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>_getRecord</name></member>
      <member refid="classHurricane_1_1Occurrence_1a46e38d50f713c221121405c3e97a0e2f" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>_getSharedPath</name></member>
      <member refid="classHurricane_1_1Occurrence_1a7c2926a2c914a91f8f192f01e20d0128" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1Occurrence_1a1b7b438adc38dfb97207627cbd4fe235" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1Occurrence_1a7e213da6a66c32db9ce76b7b1576bb26" prot="private" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>_sharedPath</name></member>
      <member refid="classHurricane_1_1Occurrence_1ae9b269d39f3f68645d6d396d7ab5d8b7" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>clearProperties</name></member>
      <member refid="classHurricane_1_1Occurrence_1a6c808dba6637c716075e0887c5f25518" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getBoundingBox</name></member>
      <member refid="classHurricane_1_1Occurrence_1aee7a0aef982c3b45e2d58830ffa8ef20" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getBoundingBox</name></member>
      <member refid="classHurricane_1_1Occurrence_1a7061bf98df2ee2e7b93f3af5dff73801" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getCompactString</name></member>
      <member refid="classHurricane_1_1Occurrence_1ac121005d5d3bc0837f66c0de4265b0c4" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getEntity</name></member>
      <member refid="classHurricane_1_1Occurrence_1a5caeab69e23907909b3deb60ff26df15" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getMasterCell</name></member>
      <member refid="classHurricane_1_1Occurrence_1a6eaa3586d2d9a09995d39b4839a75593" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getName</name></member>
      <member refid="classHurricane_1_1Occurrence_1a1b6a10a037417a9d8c003ad03996aa57" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getNetOccurrence</name></member>
      <member refid="classHurricane_1_1Occurrence_1affced95f35617150b5811c3784b20d93" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getOwnerCell</name></member>
      <member refid="classHurricane_1_1Occurrence_1adeab556806a83e8cf3ad6ecc08f3a83e" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getPath</name></member>
      <member refid="classHurricane_1_1Occurrence_1acbf59d6c01804e01f66d076c149abb49" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getProperties</name></member>
      <member refid="classHurricane_1_1Occurrence_1ab2b36b219037a2310f6527a35a9a266f" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>getProperty</name></member>
      <member refid="classHurricane_1_1Occurrence_1a0c1c6cfdf47f33166d108e2311d74e48" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>hasProperty</name></member>
      <member refid="classHurricane_1_1Occurrence_1a1ebc8e1f1417d6e8fa2434fd11f96e7b" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>isBelowTerminalNetlist</name></member>
      <member refid="classHurricane_1_1Occurrence_1ade38e5da7eb5d8701cd3a8f252cdf62f" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>isValid</name></member>
      <member refid="classHurricane_1_1Occurrence_1a0daa3964699f63f7fbec8720dd40b960" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>makeInvalid</name></member>
      <member refid="classHurricane_1_1Occurrence_1aa4162a36dc984d71caf962e55b991ed0" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>Occurrence</name></member>
      <member refid="classHurricane_1_1Occurrence_1afedb5d75781a9a4f0a19d37f0e8c88a8" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>Occurrence</name></member>
      <member refid="classHurricane_1_1Occurrence_1affec5f25b9c2efa2bcde02e9c4833626" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>Occurrence</name></member>
      <member refid="classHurricane_1_1Occurrence_1a39edad19edeef964e5340381360c0add" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>operator!=</name></member>
      <member refid="classHurricane_1_1Occurrence_1a2f1668ccce22799c99eb3a02e522c204" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>operator&lt;</name></member>
      <member refid="classHurricane_1_1Occurrence_1a389472d0d5b121a4e091511c8003cb47" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1Occurrence_1accae7f6611cb5985478d58fc793dc3e0" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>operator==</name></member>
      <member refid="classHurricane_1_1Occurrence_1aaea0bdc4f5bb4012eb52f3abe20525be" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>put</name></member>
      <member refid="classHurricane_1_1Occurrence_1a774404aa5eb01371f64cf5fda3f3ffbf" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>remove</name></member>
      <member refid="classHurricane_1_1Occurrence_1a8d86755bf50cbc7fd2849b039a372b0a" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>removeProperty</name></member>
      <member refid="classHurricane_1_1Occurrence_1a8081e29382577a4eb1a4692ceb89b59c" prot="public" virt="non-virtual"><scope>Hurricane::Occurrence</scope><name>toJson</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
