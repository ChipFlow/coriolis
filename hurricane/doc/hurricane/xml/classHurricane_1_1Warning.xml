<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1Warning" kind="class" language="C++" prot="public">
    <compoundname>Hurricane::Warning</compoundname>
    <basecompoundref refid="classHurricane_1_1Exception" prot="public" virt="non-virtual">Hurricane::Exception</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Warning_1a86de66fc76d0cec60b729e24fd43fef9" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string Hurricane::Warning::_reason</definition>
        <argsstring></argsstring>
        <name>_reason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="61" column="24" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Warning_1ad44a526a17b416b917325b7a24aac7f1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Hurricane::Warning::_code</definition>
        <argsstring></argsstring>
        <name>_code</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="62" column="24" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1Warning_1aea7aa9bccac13e6c15b1eb3b4741ef0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Warning::Warning</definition>
        <argsstring>(const string &amp;reason)</argsstring>
        <name>Warning</name>
        <param>
          <type>const string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a warning characterized by a reason (code defaults to zero). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="46" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1a93bdec83d118f235def1d354938c0529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Warning::Warning</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>Warning</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a warning characterized by a reason, using the <computeroutput>vararg</computeroutput> protocol and <computeroutput>printf</computeroutput> format (code defaults to zero). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="47" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1a95e98968e28550678f1ed91193f8ee5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Warning::Warning</definition>
        <argsstring>(int code, const string &amp;reason)</argsstring>
        <name>Warning</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a warning characterized by a reason and a code useful within a switch. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="48" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1aad9cf84a9c08fb2012462e6f38450bf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Warning::Warning</definition>
        <argsstring>(int code, const char *format,...)</argsstring>
        <name>Warning</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a warning characterized by a reason and a code useful within a switch. The reason is supplied in a <computeroutput>printf</computeroutput> like fashion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="49" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1a5855a8066401c0b1d1b830a3f7c6216e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Warning::Warning</definition>
        <argsstring>(const Warning &amp;warning)</argsstring>
        <name>Warning</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Warning" kindref="compound">Warning</ref> &amp;</type>
          <declname>warning</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="50" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1a21827cacf1cb4f53d8a1963bdeb3cd50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Warning" kindref="compound">Warning</ref> &amp;</type>
        <definition>Warning &amp; Hurricane::Warning::operator=</definition>
        <argsstring>(const Warning &amp;warning)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Warning" kindref="compound">Warning</ref> &amp;</type>
          <declname>warning</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assignment operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="51" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1afe26e9c4e0801d112d743d8afe8c3ac3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Warning::getReason</definition>
        <argsstring>() const</argsstring>
        <name>getReason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the reason for which the warning was thrown. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="53" column="24" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1a28350d25d1691b754fd8d79d1539234c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Hurricane::Warning::getCode</definition>
        <argsstring>() const</argsstring>
        <name>getCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the warning code number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="54" column="24" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1a048df06fe2f660ef25d87ef8a0472108" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>virtual string Hurricane::Warning::_getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>_getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="56" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Warning_1a84680812dedab4749ced2b0759299eac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>virtual string Hurricane::Warning::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <reimplements refid="classHurricane_1_1Exception_1ae52c6066fa48003018144eee0b389537">_getString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="57" column="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classHurricane_1_1Warning" kindref="compound">Warning</ref> description (<bold>API</bold>) </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="classHurricane_1_1Warning_1secWarningIntro">
<title>Introduction</title>
<para>There is no difference with the <ref refid="classHurricane_1_1Error" kindref="compound">Error</ref> type but the printed message is prefixed by <bold>WARNING</bold> instead of <bold>ERROR</bold>.</para>
</sect1>
<sect1 id="classHurricane_1_1Warning_1secWarningNouveauxTypes">
<title>Nouveaux types</title>
<para>type: <bold>Warning::Inherit</bold> -&gt; <ref refid="classHurricane_1_1Exception" kindref="compound">Exception</ref> Useful for calling the base class methods without knowing this class.</para>
</sect1>
<sect1 id="classHurricane_1_1Warning_1secWarningRemark">
<title>Remark</title>
<para>You can also use this object to print messages without throwing an exception as shown below : <programlisting><codeline><highlight class="normal">Cell*<sp/>cell<sp/>=<sp/>library-&gt;getCell(&quot;adder&quot;);<sp/>//<sp/>we<sp/>get<sp/>the<sp/>cell</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal">if<sp/>(!cell)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>Warning(&quot;Unknown<sp/>cell<sp/>adder&quot;).what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal">else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>//<sp/>we<sp/>know<sp/>what<sp/>to<sp/>do<sp/>here</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> The same remark applies to all exception types. </para>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Hurricane::Warning</label>
        <link refid="classHurricane_1_1Warning"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Hurricane::Exception</label>
        <link refid="classHurricane_1_1Exception"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Hurricane::Warning</label>
        <link refid="classHurricane_1_1Warning"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Hurricane::Exception</label>
        <link refid="classHurricane_1_1Exception"/>
      </node>
    </collaborationgraph>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" line="42" column="3" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Warning.h" bodystart="42" bodyend="63"/>
    <listofallmembers>
      <member refid="classHurricane_1_1Warning_1ad44a526a17b416b917325b7a24aac7f1" prot="protected" virt="non-virtual"><scope>Hurricane::Warning</scope><name>_code</name></member>
      <member refid="classHurricane_1_1Warning_1a84680812dedab4749ced2b0759299eac" prot="public" virt="virtual"><scope>Hurricane::Warning</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1Warning_1a048df06fe2f660ef25d87ef8a0472108" prot="public" virt="virtual"><scope>Hurricane::Warning</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1Exception_1ac39b9718b444f09a0738c4ed58e21255" prot="private" virt="non-virtual"><scope>Hurricane::Warning</scope><name>_htmlTranslator</name></member>
      <member refid="classHurricane_1_1Warning_1a86de66fc76d0cec60b729e24fd43fef9" prot="protected" virt="non-virtual"><scope>Hurricane::Warning</scope><name>_reason</name></member>
      <member refid="classHurricane_1_1Exception_1aede264d231105289ce16e9488f3ea2d4" prot="private" virt="non-virtual"><scope>Hurricane::Warning</scope><name>_textTranslator</name></member>
      <member refid="classHurricane_1_1Exception_1a52f62b7ecbd5e8abf8cd8dcc9be9ad71" prot="protected" virt="non-virtual"><scope>Hurricane::Warning</scope><name>Exception</name></member>
      <member refid="classHurricane_1_1Exception_1a5151ba69755ffdbc73b40b311dc04311" prot="private" virt="non-virtual"><scope>Hurricane::Warning</scope><name>Exception</name></member>
      <member refid="classHurricane_1_1Warning_1a28350d25d1691b754fd8d79d1539234c" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>getCode</name></member>
      <member refid="classHurricane_1_1Warning_1afe26e9c4e0801d112d743d8afe8c3ac3" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>getReason</name></member>
      <member refid="classHurricane_1_1Exception_1a2582e6c3acb236e24f48cb873f64e3e9" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>htmlWhat</name></member>
      <member refid="classHurricane_1_1Warning_1a21827cacf1cb4f53d8a1963bdeb3cd50" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1Exception_1a0effe808df00f4efe10925131304b8d0" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>setHtmlTranslator</name></member>
      <member refid="classHurricane_1_1Exception_1a1a57fbbc4b57a014558ba31d18ec9b62" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>setTextTranslator</name></member>
      <member refid="classHurricane_1_1Exception_1a19b5d24e8f02bb99625a5206638c44e8" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>textWhat</name></member>
      <member refid="classHurricane_1_1Warning_1aea7aa9bccac13e6c15b1eb3b4741ef0d" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>Warning</name></member>
      <member refid="classHurricane_1_1Warning_1a93bdec83d118f235def1d354938c0529" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>Warning</name></member>
      <member refid="classHurricane_1_1Warning_1a95e98968e28550678f1ed91193f8ee5f" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>Warning</name></member>
      <member refid="classHurricane_1_1Warning_1aad9cf84a9c08fb2012462e6f38450bf0" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>Warning</name></member>
      <member refid="classHurricane_1_1Warning_1a5855a8066401c0b1d1b830a3f7c6216e" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>Warning</name></member>
      <member refid="classHurricane_1_1Exception_1a6d8036af345628567494eeab9c8e2e3a" prot="public" virt="non-virtual"><scope>Hurricane::Warning</scope><name>what</name></member>
      <member refid="classHurricane_1_1Exception_1aeb261a75c5c35332b8c07a4beb01243e" prot="public" virt="virtual"><scope>Hurricane::Warning</scope><name>~Exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
