<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1Error" kind="class" language="C++" prot="public">
    <compoundname>Hurricane::Error</compoundname>
    <basecompoundref refid="classHurricane_1_1Exception" prot="public" virt="non-virtual">Hurricane::Exception</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Error_1abf4fd816c65c3a082b93db4817c3acd5" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Hurricane::Error::_reason</definition>
        <argsstring></argsstring>
        <name>_reason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="58" column="28" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Error_1a91fb5161ec052616fb2d714e2947c39b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Hurricane::Error::_code</definition>
        <argsstring></argsstring>
        <name>_code</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="59" column="28" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Error_1a08efb377e3143190400d25b990e0cd51" prot="private" static="no" mutable="no">
        <type>Backtrace</type>
        <definition>Backtrace Hurricane::Error::_backtrace</definition>
        <argsstring></argsstring>
        <name>_backtrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="60" column="28" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1Error_1ab58387c890740ed8082532c5342f2d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Error::Error</definition>
        <argsstring>(const string &amp;reason)</argsstring>
        <name>Error</name>
        <param>
          <type>const string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a error characterized by a reason (code defaults to zero). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="45" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1a98f50dcce8258982d450e8f5f79cff38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Error::Error</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>Error</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a error characterized by a reason, using the <computeroutput>vararg</computeroutput> protocol and <computeroutput>printf</computeroutput> format (code defaults to zero). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="46" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1a33e4d2a1ea71be6395dc2716b68378c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Error::Error</definition>
        <argsstring>(int code, const string &amp;reason)</argsstring>
        <name>Error</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a error characterized by a reason and a code useful within a switch. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="47" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1a32ccc14fe29d7d2a7b5fe66ee0a3845c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Error::Error</definition>
        <argsstring>(int code, const char *format,...)</argsstring>
        <name>Error</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds a error characterized by a reason and a code useful within a switch. The reason is supplied in a <computeroutput>printf</computeroutput> like fashion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="48" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1a7d90d5f5727dab2a9cc0a6427fb2b084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Error::Error</definition>
        <argsstring>(const Error &amp;error)</argsstring>
        <name>Error</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Error" kindref="compound">Error</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="49" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1a1a18927a2d4eb2b0b0acfc2908be7008" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Error::getReason</definition>
        <argsstring>() const</argsstring>
        <name>getReason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the reason for which the error was thrown. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="50" column="37" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1a1ba11c6ba6eff9fdf2923520fe80a6b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Hurricane::Error::getCode</definition>
        <argsstring>() const</argsstring>
        <name>getCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the error code number. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="51" column="37" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1aa56856942562978d21b6cdace3016be3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Error::where</definition>
        <argsstring>() const</argsstring>
        <name>where</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="52" column="37" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1ab3b8bb521802f332340eaf0b37eb1dfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Error::textWhere</definition>
        <argsstring>() const</argsstring>
        <name>textWhere</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> A stack trace, suitable for tty. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="53" column="37" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1afafcbeae105f75906c7c45024de41c18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string Hurricane::Error::htmlWhere</definition>
        <argsstring>() const</argsstring>
        <name>htmlWhere</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> A stack trace, suitable for HTML. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="54" column="37" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1a345a5e93ba49e5c7c799860c7eb3738b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>virtual string Hurricane::Error::_getTypeName</definition>
        <argsstring>() const</argsstring>
        <name>_getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="55" column="37"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Error_1ac3db1aea37b2a616d473f191134377a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>virtual string Hurricane::Error::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <reimplements refid="classHurricane_1_1Exception_1ae52c6066fa48003018144eee0b389537">_getString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="56" column="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classHurricane_1_1Error" kindref="compound">Error</ref> description (<bold>API</bold>) </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="classHurricane_1_1Error_1secErrorPrintingFormat">
<title>Printing format</title>
<para>Errors are printed with different formats wether the error code is null or not : text: So the following code : <programlisting><codeline><highlight class="normal">try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>throw<sp/>Error(&quot;Something<sp/>strange&quot;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">catch<sp/>{Exception&amp;<sp/>exception)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>exception.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> Will produce the message : <programlisting><codeline><highlight class="normal">[ERROR]<sp/>Something<sp/>strange</highlight></codeline>
</programlisting> while the following code : <programlisting><codeline><highlight class="normal">try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>throw<sp/>Error(3,<sp/>&quot;Can&apos;t<sp/>create<sp/>Net<sp/>:<sp/>null<sp/>cell&quot;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">catch<sp/>{Exception&amp;<sp/>exception)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>exception.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> Will produce the message : <programlisting><codeline><highlight class="normal">[ERROR:3]<sp/>Can&apos;t<sp/>create<sp/>Net<sp/>:<sp/>null<sp/>cell</highlight></codeline>
</programlisting> You can always print something different as shown in the following code : <programlisting><codeline><highlight class="normal">try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>throw<sp/>Error(3,<sp/>&quot;Can&apos;t<sp/>create<sp/>Net<sp/>:<sp/>null<sp/>cell&quot;);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">catch<sp/>{Error&amp;<sp/>error)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>error.getReason()<sp/>&lt;&lt;<sp/>&quot;<sp/>(code<sp/>&quot;<sp/>&lt;&lt;<sp/>error.getCode()<sp/>&lt;&lt;<sp/>&quot;)&quot;<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">catch<sp/>{Exception&amp;<sp/>exception)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>exception.what()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> Which will produce the message : <programlisting><codeline><highlight class="normal">Can&apos;t<sp/>create<sp/>Net<sp/>:<sp/>null<sp/>cell<sp/>(code<sp/>3)</highlight></codeline>
</programlisting> </para>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Hurricane::Error</label>
        <link refid="classHurricane_1_1Error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Hurricane::Exception</label>
        <link refid="classHurricane_1_1Exception"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Hurricane::Error</label>
        <link refid="classHurricane_1_1Error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Hurricane::Exception</label>
        <link refid="classHurricane_1_1Exception"/>
      </node>
    </collaborationgraph>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" line="43" column="3" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Error.h" bodystart="43" bodyend="61"/>
    <listofallmembers>
      <member refid="classHurricane_1_1Error_1a08efb377e3143190400d25b990e0cd51" prot="private" virt="non-virtual"><scope>Hurricane::Error</scope><name>_backtrace</name></member>
      <member refid="classHurricane_1_1Error_1a91fb5161ec052616fb2d714e2947c39b" prot="private" virt="non-virtual"><scope>Hurricane::Error</scope><name>_code</name></member>
      <member refid="classHurricane_1_1Error_1ac3db1aea37b2a616d473f191134377a9" prot="public" virt="virtual"><scope>Hurricane::Error</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1Error_1a345a5e93ba49e5c7c799860c7eb3738b" prot="public" virt="virtual"><scope>Hurricane::Error</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1Exception_1ac39b9718b444f09a0738c4ed58e21255" prot="private" virt="non-virtual"><scope>Hurricane::Error</scope><name>_htmlTranslator</name></member>
      <member refid="classHurricane_1_1Error_1abf4fd816c65c3a082b93db4817c3acd5" prot="private" virt="non-virtual"><scope>Hurricane::Error</scope><name>_reason</name></member>
      <member refid="classHurricane_1_1Exception_1aede264d231105289ce16e9488f3ea2d4" prot="private" virt="non-virtual"><scope>Hurricane::Error</scope><name>_textTranslator</name></member>
      <member refid="classHurricane_1_1Error_1ab58387c890740ed8082532c5342f2d03" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>Error</name></member>
      <member refid="classHurricane_1_1Error_1a98f50dcce8258982d450e8f5f79cff38" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>Error</name></member>
      <member refid="classHurricane_1_1Error_1a33e4d2a1ea71be6395dc2716b68378c8" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>Error</name></member>
      <member refid="classHurricane_1_1Error_1a32ccc14fe29d7d2a7b5fe66ee0a3845c" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>Error</name></member>
      <member refid="classHurricane_1_1Error_1a7d90d5f5727dab2a9cc0a6427fb2b084" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>Error</name></member>
      <member refid="classHurricane_1_1Exception_1a52f62b7ecbd5e8abf8cd8dcc9be9ad71" prot="protected" virt="non-virtual"><scope>Hurricane::Error</scope><name>Exception</name></member>
      <member refid="classHurricane_1_1Exception_1a5151ba69755ffdbc73b40b311dc04311" prot="private" virt="non-virtual"><scope>Hurricane::Error</scope><name>Exception</name></member>
      <member refid="classHurricane_1_1Error_1a1ba11c6ba6eff9fdf2923520fe80a6b2" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>getCode</name></member>
      <member refid="classHurricane_1_1Error_1a1a18927a2d4eb2b0b0acfc2908be7008" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>getReason</name></member>
      <member refid="classHurricane_1_1Exception_1a2582e6c3acb236e24f48cb873f64e3e9" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>htmlWhat</name></member>
      <member refid="classHurricane_1_1Error_1afafcbeae105f75906c7c45024de41c18" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>htmlWhere</name></member>
      <member refid="classHurricane_1_1Exception_1a5295749ae52853b717e7d7017397550e" prot="private" virt="non-virtual"><scope>Hurricane::Error</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1Exception_1a0effe808df00f4efe10925131304b8d0" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>setHtmlTranslator</name></member>
      <member refid="classHurricane_1_1Exception_1a1a57fbbc4b57a014558ba31d18ec9b62" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>setTextTranslator</name></member>
      <member refid="classHurricane_1_1Exception_1a19b5d24e8f02bb99625a5206638c44e8" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>textWhat</name></member>
      <member refid="classHurricane_1_1Error_1ab3b8bb521802f332340eaf0b37eb1dfc" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>textWhere</name></member>
      <member refid="classHurricane_1_1Exception_1a6d8036af345628567494eeab9c8e2e3a" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>what</name></member>
      <member refid="classHurricane_1_1Error_1aa56856942562978d21b6cdace3016be3" prot="public" virt="non-virtual"><scope>Hurricane::Error</scope><name>where</name></member>
      <member refid="classHurricane_1_1Exception_1aeb261a75c5c35332b8c07a4beb01243e" prot="public" virt="virtual"><scope>Hurricane::Error</scope><name>~Exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
