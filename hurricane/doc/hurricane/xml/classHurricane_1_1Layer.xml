<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1Layer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Hurricane::Layer</compoundname>
    <basecompoundref refid="classHurricane_1_1DBo" prot="public" virt="non-virtual">Hurricane::DBo</basecompoundref>
    <derivedcompoundref refid="classHurricane_1_1BasicLayer" prot="public" virt="non-virtual">Hurricane::BasicLayer</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1ContactLayer" prot="public" virt="non-virtual">Hurricane::ContactLayer</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1DiffusionLayer" prot="public" virt="non-virtual">Hurricane::DiffusionLayer</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1RegularLayer" prot="public" virt="non-virtual">Hurricane::RegularLayer</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1TransistorLayer" prot="public" virt="non-virtual">Hurricane::TransistorLayer</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1ViaLayer" prot="public" virt="non-virtual">Hurricane::ViaLayer</derivedcompoundref>
    <innerclass refid="structHurricane_1_1Layer_1_1CompareByMask" prot="public">Hurricane::Layer::CompareByMask</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classHurricane_1_1Layer_1a183b5d88fd832b5cb43ba8fd5ccac3d1" prot="public" static="no">
        <type><ref refid="classHurricane_1_1DBo" kindref="compound">DBo</ref></type>
        <definition>typedef DBo Hurricane::Layer::Super</definition>
        <argsstring></argsstring>
        <name>Super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="54" column="21" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" prot="public" static="no">
        <type>Hurricane::Mask&lt; unsigned long long &gt;</type>
        <definition>Hurricane::Layer::Mask</definition>
        <argsstring></argsstring>
        <name>Mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This type represents a mask bit field characterising efficiently the constituents of any kind of layer. It associates to each basic layer a bit and to each symbolic layer the union of the bits corresponding to its basic layers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="65" column="31" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a5c0a859005d2dd842c30aaee7061b101" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t Hurricane::Layer::NoFlags</definition>
        <argsstring></argsstring>
        <name>NoFlags</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="56" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a4d6c9d1985196e73c7b9c6381beaf043" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t Hurricane::Layer::EnclosureH</definition>
        <argsstring></argsstring>
        <name>EnclosureH</name>
        <initializer>= (1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="57" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1ae42c305f9d5720d789e8b6cc05fcc7cf" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t Hurricane::Layer::EnclosureV</definition>
        <argsstring></argsstring>
        <name>EnclosureV</name>
        <initializer>= (1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="58" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a646370c1fcdaf7bd8176b4244ebb572e" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t Hurricane::Layer::EnclosureMax</definition>
        <argsstring></argsstring>
        <name>EnclosureMax</name>
        <initializer>= (1 &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="59" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1ac2ab4a3febd49f428bd066242e42280d" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t Hurricane::Layer::ExtensionCap</definition>
        <argsstring></argsstring>
        <name>ExtensionCap</name>
        <initializer>= (1 &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="60" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a9f555decd6aff4fcb2e1688b9bc11d9e" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t Hurricane::Layer::ExtensionWidth</definition>
        <argsstring></argsstring>
        <name>ExtensionWidth</name>
        <initializer>= (1 &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="61" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classHurricane_1_1Layer_1af2db141d9729a136e25eaefd6549d2b2" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1Technology" kindref="compound">Technology</ref> *</type>
        <definition>Technology* Hurricane::Layer::_technology</definition>
        <argsstring></argsstring>
        <name>_technology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="122" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a622c08c4f60322fa9476183a301bd1c0" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1Name" kindref="compound">Name</ref></type>
        <definition>Name Hurricane::Layer::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="123" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1ade957bc4a9ecd6a0f41d270d5339e1c5" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Mask</ref></type>
        <definition>Mask Hurricane::Layer::_mask</definition>
        <argsstring></argsstring>
        <name>_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="124" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1aec92efef3058a8e172dbbbb952bac29d" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Mask</ref></type>
        <definition>Mask Hurricane::Layer::_extractMask</definition>
        <argsstring></argsstring>
        <name>_extractMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="125" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a6725cf7e5d5f6e5e64cdd5ac0f52a860" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>DbU::Unit Hurricane::Layer::_minimalSize</definition>
        <argsstring></argsstring>
        <name>_minimalSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="126" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a44074cd58253d477d5328e3a47c56da7" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>DbU::Unit Hurricane::Layer::_minimalSpacing</definition>
        <argsstring></argsstring>
        <name>_minimalSpacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="127" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a92a8319818044b4ebabd5301f31f0043" prot="private" static="no" mutable="no">
        <type><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer* Hurricane::Layer::_nextOfTechnologyLayerMap</definition>
        <argsstring></argsstring>
        <name>_nextOfTechnologyLayerMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="128" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a5230e9b64ffff149946df06ae79086ef" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hurricane::Layer::_symbolic</definition>
        <argsstring></argsstring>
        <name>_symbolic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="129" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1a7e5de1f36d9746a778c18083f8101d53" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Hurricane::Layer::_blockage</definition>
        <argsstring></argsstring>
        <name>_blockage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="130" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1Layer_1ace6cd3237329c674b10c2d78e86050ee" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Hurricane::Layer::_minimalArea</definition>
        <argsstring></argsstring>
        <name>_minimalArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="131" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1Layer_1ae506b17bd7a245de622f8a8e9947629b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Technology" kindref="compound">Technology</ref> *</type>
        <definition>Technology * Hurricane::Layer::getTechnology</definition>
        <argsstring>() const</argsstring>
        <name>getTechnology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the technolgy owning the layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="67" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a3dc54f6efc60fddb8529599caa6b0f1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
        <definition>const Name &amp; Hurricane::Layer::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the name of the layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="68" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a29b22c3b59cc24bf82449ad6c068ff1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Mask</ref> &amp;</type>
        <definition>const Layer::Mask &amp; Hurricane::Layer::getMask</definition>
        <argsstring>() const</argsstring>
        <name>getMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the mask associated to the layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="69" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="158" bodyend="158"/>
        <referencedby refid="classHurricane_1_1Layer_1abbd13bf66cf75dd6445d0353987119f3" compoundref="Layer_8h" startline="154" endline="154">above</referencedby>
        <referencedby refid="classHurricane_1_1Layer_1a090f8697946f721351a626052af25027" compoundref="Layer_8h" startline="155" endline="155">below</referencedby>
        <referencedby refid="classHurricane_1_1Technology_1ae5590e455d35f76531a6feb0c0f111a2" compoundref="Technology_8h" startline="200" endline="200">Hurricane::Technology::isMetal</referencedby>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1af009bbd89a8e8260122b7244bfa10349" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Mask</ref> &amp;</type>
        <definition>const Layer::Mask &amp; Hurricane::Layer::getExtractMask</definition>
        <argsstring>() const</argsstring>
        <name>getExtractMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the mask used for extraction.</para>
<para>Two differents basic layers have different masks but may have same extraction masks (ie CP layer which represent poly and CPG which represent poly used to realize transistor gates). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="70" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1afed9a488bf20daaeed18874f2b16268e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
        <definition>const DbU::Unit &amp; Hurricane::Layer::getMinimalSize</definition>
        <argsstring>() const</argsstring>
        <name>getMinimalSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the minimal size allowed for a rectangular layout pad on this layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="71" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a6a03f9f40ca855d33763497162414062" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
        <definition>const DbU::Unit &amp; Hurricane::Layer::getMinimalSpacing</definition>
        <argsstring>() const</argsstring>
        <name>getMinimalSpacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the minimal spacing between two pads on this layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="72" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a7e953c126a02952e3a0b0d32f37e2ae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>BasicLayers</type>
        <definition>BasicLayers Hurricane::Layer::getBasicLayers</definition>
        <argsstring>() const =0</argsstring>
        <name>getBasicLayers</name>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1a9d9d8beaaafa13f5c7a4cd5c32499a51">getBasicLayers</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1a25fc886aaf6d1a0ad234d88fc2a3e684">getBasicLayers</reimplementedby>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1ad58bdd7688b6ed4b3b9983588d32d735">getBasicLayers</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a08eee11b0c75a5282bbe2e3c809cde4a">getBasicLayers</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a2ceef3fe53133499f6f76580865882f4">getBasicLayers</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a9157f79a2e604ef37d20855099f6c90c">getBasicLayers</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> the collection of basic layers within this layer.</para>
<para><simplesect kind="remark"><para>For a basic layer the collection contains this one only. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="73" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a6da189eab232c3d8d8c89269588a2d14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>virtual const Layer* Hurricane::Layer::getBlockageLayer</definition>
        <argsstring>() const</argsstring>
        <name>getBlockageLayer</name>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1a2e70b3005bdf18568c14284123e729f6">getBlockageLayer</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1ac95dacf517c8300e368df29032d1cae5">getBlockageLayer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="74" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1ab5466dfd96d7bc45196c5c027658a8e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>virtual const Layer* Hurricane::Layer::getCut</definition>
        <argsstring>() const</argsstring>
        <name>getCut</name>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a78761208bccdf1cc46fa2702f79aac2a">getCut</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="75" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a5f7c43a29f3dd02a9ebccbcbf91d6727" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>const Layer * Hurricane::Layer::getTop</definition>
        <argsstring>() const</argsstring>
        <name>getTop</name>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1a0366001110b1b0da502bb2465acd32ff">getTop</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a678dd8f4aeee9fb846e20231bb7852aa">getTop</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1ae6d4e736d92b5ab0a3baa4dffa190c5d">getTop</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The uppermost layer of that layer. On <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>, it is always the layer itself. In symbolic layers the meaning depends on the object structure.</para>
<para><simplesect kind="remark"><para>In symbolic layers, top &amp; bottom are not related to the <ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Layer::Mask</ref> but to the <emphasis>structuration</emphasis> of the layer. It is advisable that the designer create layers and symbolic layers in way that ensure the top layer is indeed the one with the greater mask. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="76" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a4dab4552a219d2d900ed0b1245dc6580" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>const Layer * Hurricane::Layer::getBottom</definition>
        <argsstring>() const</argsstring>
        <name>getBottom</name>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1a02c0b3806891f7f8bcbb2902d12732ff">getBottom</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1ae1c021e250a3a7ff2d53646e5cc5c25d">getBottom</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a618dd775e48bce4de24b8909d1590611">getBottom</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The lowermost layer of that layer. On <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>, it is always the layer itself. In symbolic layers the meaning depends on the object structure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="77" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a69e76c09a56260169c4f5c145a35a47f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>const Layer * Hurricane::Layer::getOpposite</definition>
        <argsstring>(const Layer *) const</argsstring>
        <name>getOpposite</name>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a1d42931af629e9700b92dacd6c71a6ed">getOpposite</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a2254a7a560d614f1f8408b401d9023f2">getOpposite</reimplementedby>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
          <defname>source</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> This method is only meaningful for <ref refid="classHurricane_1_1ViaLayer" kindref="compound">ViaLayer</ref>. It returns the metal <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> opposite to the one given in arguments. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="78" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1ac32eff2dc51180660fe9b4ce17cae42c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer * Hurricane::Layer::getMetalAbove</definition>
        <argsstring>(bool useSymbolic=true) const</argsstring>
        <name>getMetalAbove</name>
        <param>
          <type>bool</type>
          <declname>useSymbolic</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The metal <emphasis>working layer</emphasis> whose mask is immediatly above this one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="79" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a4bc8358f67c1a1a9b2581e4b3732108c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer * Hurricane::Layer::getMetalBelow</definition>
        <argsstring>(bool useSymbolic=true) const</argsstring>
        <name>getMetalBelow</name>
        <param>
          <type>bool</type>
          <declname>useSymbolic</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The metal <emphasis>working layer</emphasis> whose mask is immediatly below this one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="80" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1ad9fca94fed1837e3e80e9b6445822b7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer * Hurricane::Layer::getCutAbove</definition>
        <argsstring>(bool useSymbolic=true) const</argsstring>
        <name>getCutAbove</name>
        <param>
          <type>bool</type>
          <declname>useSymbolic</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The cut <emphasis>working layer</emphasis> whose mask is immediatly above this one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="81" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a983956c8127688390f978cc5bd0d768d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer * Hurricane::Layer::getCutBelow</definition>
        <argsstring>(bool useSymbolic=true) const</argsstring>
        <name>getCutBelow</name>
        <param>
          <type>bool</type>
          <declname>useSymbolic</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The cut <emphasis>working layer</emphasis> whose mask is immediatly below this one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="82" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a1ebce43b438610979f50b5ff95c1d972" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getEnclosure</definition>
        <argsstring>(uint32_t flags) const</argsstring>
        <name>getEnclosure</name>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1a072a95f739443011592ee4a441d54916">getEnclosure</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a6790cdb9f0066e2fd35125201225d285">getEnclosure</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1abf245196722b5d35fe9937a15e790287">getEnclosure</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="83" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a8cfdc1089644b8dcf671249b83fb5905" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getExtentionCap</definition>
        <argsstring>() const</argsstring>
        <name>getExtentionCap</name>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1a348205ce7a9f1e4edb8e68f80d145a10">getExtentionCap</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1acd57004e83c63684e4dd564391c6fe86">getExtentionCap</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a59bbc79a5b3a2973882a42d21d8fcf38">getExtentionCap</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="84" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a5f867b79fd0ef630f53033b4bc38804b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getExtentionWidth</definition>
        <argsstring>() const</argsstring>
        <name>getExtentionWidth</name>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1a9a359a8cc2e291bb2ebc9f2d53fc0fde">getExtentionWidth</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a637bed1a2c84bf575a9458be59ab43b6">getExtentionWidth</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1af69976f5d4df07d2a47ea819f46f3da6">getExtentionWidth</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="85" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a0afb51d5f191408ab48f9c133d0f8d12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getEnclosure</definition>
        <argsstring>(const BasicLayer *layer, uint32_t flags) const</argsstring>
        <name>getEnclosure</name>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1a8f32587f59b0106a19226a2581cca204">getEnclosure</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a18366ab0b007dbddb0355ea63472a509">getEnclosure</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a2c5bfff7e7254e077bdf4550148f6b0f">getEnclosure</reimplementedby>
        <param>
          <type>const <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="86" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a054659082ee4630aa93c6efe94a8cee9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getExtentionCap</definition>
        <argsstring>(const BasicLayer *layer) const</argsstring>
        <name>getExtentionCap</name>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1a1b5cedcc597fe178bd8c045cfd9bfaf6">getExtentionCap</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a341c959179adaef20d5c5134e0b5cfbf">getExtentionCap</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a6e25b920cc9c2c2eab334f977ffcd5bc">getExtentionCap</reimplementedby>
        <param>
          <type>const <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="87" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1afef1036df50f5b93cb09d2f3de929b19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getExtentionWidth</definition>
        <argsstring>(const BasicLayer *layer) const</argsstring>
        <name>getExtentionWidth</name>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1af73934ff95299c3cba3aaa7a0b5967be">getExtentionWidth</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a76646e42a058287c203727925ee699d1">getExtentionWidth</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a8828a155d630f69dc59d45672825361c">getExtentionWidth</reimplementedby>
        <param>
          <type>const <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="88" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1aa260137e48e82bc5aa193ec5231611ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getTopEnclosure</definition>
        <argsstring>(uint32_t flags) const</argsstring>
        <name>getTopEnclosure</name>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1ab9dc2e8056dc73056b35ccf5cddd8a74">getTopEnclosure</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="89" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1ac76508166c50f83173a9e04607a7bbbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        <definition>virtual DbU::Unit Hurricane::Layer::getBottomEnclosure</definition>
        <argsstring>(uint32_t flags) const</argsstring>
        <name>getBottomEnclosure</name>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a73049ddfd95d9a869a19048e77f7d4c5">getBottomEnclosure</reimplementedby>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="90" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a265005f55b2f464b1888aae1d9bc5b74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double Hurricane::Layer::getMinimalArea</definition>
        <argsstring>() const</argsstring>
        <name>getMinimalArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="91" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1abbd13bf66cf75dd6445d0353987119f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Layer::above</definition>
        <argsstring>(const Layer *layer) const</argsstring>
        <name>above</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold>, if <computeroutput>layer</computeroutput> is above this one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="93" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="154" bodyend="154"/>
        <references refid="classHurricane_1_1Layer_1a29b22c3b59cc24bf82449ad6c068ff1f" compoundref="Layer_8h" startline="158" endline="158">getMask</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a090f8697946f721351a626052af25027" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Layer::below</definition>
        <argsstring>(const Layer *layer) const</argsstring>
        <name>below</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold>, if <computeroutput>layer</computeroutput> is below this one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="94" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="155" bodyend="155"/>
        <references refid="classHurricane_1_1Layer_1a29b22c3b59cc24bf82449ad6c068ff1f" compoundref="Layer_8h" startline="158" endline="158">getMask</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1af63dd0a48e2a3514a1cdaccd4586bad8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Layer::contains</definition>
        <argsstring>(const Layer *layer) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the <computeroutput>&lt;layer&gt;</computeroutput> is completely included in the layer <computeroutput>&lt;this&gt;</computeroutput> (that is if the basic layers of <computeroutput>&lt;layer&gt;</computeroutput> are a sub-set of the basic layers of <computeroutput>&lt;this&gt;</computeroutput>), else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="95" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1adbea0bafaa87b033efdaa98bf2709182" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Layer::intersect</definition>
        <argsstring>(const Layer *layer) const</argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the <computeroutput>&lt;layer&gt;</computeroutput> and the layer <computeroutput>&lt;this&gt;</computeroutput> have at least a common basic layer, else <bold>false</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="96" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a9a3cef8ec43e2f98d6905ce5dab198e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Layer::isSymbolic</definition>
        <argsstring>() const</argsstring>
        <name>isSymbolic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="97" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a9a3ca3b9b6fe8fbf87b235bbe92e11a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::Layer::isBlockage</definition>
        <argsstring>() const</argsstring>
        <name>isBlockage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="98" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1ab93809f19bc360f58d35e91438ef2f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setName</definition>
        <argsstring>(const Name &amp;name)</argsstring>
        <name>setName</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets or changes the layer name.</para>
<para><simplesect kind="remark"><para>An exception is thrown if the name is empty or if there is an other layer with that name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="100" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1afc623b3fd4ed529df5ee6c0e098e823d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setSymbolic</definition>
        <argsstring>(bool)</argsstring>
        <name>setSymbolic</name>
        <param>
          <type>bool</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="101" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1af45f8189ac78b0b439215479f2acba4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setBlockage</definition>
        <argsstring>(bool)</argsstring>
        <name>setBlockage</name>
        <param>
          <type>bool</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="102" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a400d17fe999c0080bb50489948986fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setMinimalSize</definition>
        <argsstring>(const DbU::Unit &amp;minimalSize)</argsstring>
        <name>setMinimalSize</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>minimalSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the minimal size of a pad on this layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="103" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a81a8a24526e8535fba5a35cdcc194a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setMinimalSpacing</definition>
        <argsstring>(const DbU::Unit &amp;minimalSpacing)</argsstring>
        <name>setMinimalSpacing</name>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>minimalSpacing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the minimal spacing between two pads on this layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="104" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a04e9c983525d074508d7e10107c1c3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setEnclosure</definition>
        <argsstring>(const BasicLayer *layer, DbU::Unit, uint32_t flags)</argsstring>
        <name>setEnclosure</name>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1ad7847b2aca58663c48e484d674cce3b2">setEnclosure</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a69f0547aaa071cf352742d737074748e">setEnclosure</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a3f0aeb040914c9b9b2f6398c062b8ebc">setEnclosure</reimplementedby>
        <param>
          <type>const <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the enclosure for the given <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="105" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a55c7b39e000442ea36a0774d26b7fbde" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setExtentionCap</definition>
        <argsstring>(const BasicLayer *layer, DbU::Unit)</argsstring>
        <name>setExtentionCap</name>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1af11483eaf5449f98a2e96d67b2a3b4cb">setExtentionCap</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a14c4011f40958bf3fdb66822f2ed2105">setExtentionCap</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a091f51ccf4bc5b9d65ccca0c05135f5e">setExtentionCap</reimplementedby>
        <param>
          <type>const <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
          <defname>ecap</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the extention cap for the given <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="106" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a7a6943dbcb3403aff34056cd5de00e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::setExtentionWidth</definition>
        <argsstring>(const BasicLayer *layer, DbU::Unit)</argsstring>
        <name>setExtentionWidth</name>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1a6a9ce7e15e85bb59cb0941433c35e26c">setExtentionWidth</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1af0e7740d8deca2f623e98411d263dfbd">setExtentionWidth</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1aa86bb3c5761e2292c0817142b9e08f62">setExtentionWidth</reimplementedby>
        <param>
          <type>const <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref></type>
          <defname>ewidth</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the extention width for the given <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="107" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1ad4af0ce58f523b94d6f153877882a3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Hurricane::Layer::setMinimalArea</definition>
        <argsstring>(double)</argsstring>
        <name>setMinimalArea</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="108" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a2454f6bdc9acb09c8631fe6e48eb6b71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Hurricane::Layer::_toJson</definition>
        <argsstring>(JsonWriter *) const</argsstring>
        <name>_toJson</name>
        <reimplements refid="classHurricane_1_1DBo_1af25ab814f1d3f5b740e60e292fad0ea2">_toJson</reimplements>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1afca44aa5490cf7ef05e5f29ab946725d">_toJson</reimplementedby>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1afd46ef9e1e0beb87412894b46bda7641">_toJson</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a988c40295238096a25494a4a8a63a57d">_toJson</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a8913abeeee3f921c0158fb0214a5313f">_toJson</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1af193936db9d5a93dd2ea379e42a63d58">_toJson</reimplementedby>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1a9de9ce54997a797839212285b406f165">_toJson</reimplementedby>
        <param>
          <type>JsonWriter *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="110" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a2891ad3a9af7acea29d8b245a09c8416" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>virtual string Hurricane::Layer::_getString</definition>
        <argsstring>() const</argsstring>
        <name>_getString</name>
        <reimplements refid="classHurricane_1_1DBo_1a2977898bfe26429c58047f31e99aeeee">_getString</reimplements>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1aa9851d04ddfbe19999b57b9aee751432">_getString</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1a45733b62fae85130a1b2c08caf0b1f45">_getString</reimplementedby>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1a1f92bf0d80b73663ab5f125f3454697b">_getString</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1ae40511eb297cb0ee7fdbc46e44f9cc55">_getString</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a6ab59d54503aebf24b1044f7913ec94a">_getString</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1aa655ab045f405379e7301238673bb208">_getString</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="111" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a47f22cdfa14bf765777a04fbeb2f76e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>Record *</type>
        <definition>virtual Record* Hurricane::Layer::_getRecord</definition>
        <argsstring>() const</argsstring>
        <name>_getRecord</name>
        <reimplements refid="classHurricane_1_1DBo_1a2b0b963ba17903f0ffd5de938da1c57b">_getRecord</reimplements>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1a8ca3619133c45cd68e45c5af547c76bb">_getRecord</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1a802bd528384e1abacd4489321061f356">_getRecord</reimplementedby>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1acbbe98d4e8d2a3f72f94f08c40a631a1">_getRecord</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a427ef97ece297b46472277f84ac8e58f">_getRecord</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1a8e011dfe2957ae63b62b8224961aaa26">_getRecord</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1ad718874c349bb0fc997bcb67d3e79d3b">_getRecord</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="112" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a40d47c3280521fc2fcdaf31ddd3f77e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        <definition>Layer * Hurricane::Layer::_getNextOfTechnologyLayerMap</definition>
        <argsstring>() const</argsstring>
        <name>_getNextOfTechnologyLayerMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="113" column="32" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a4a04a05ed743a8c25d6691bc250a1fbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::_setMask</definition>
        <argsstring>(const Mask &amp;mask)</argsstring>
        <name>_setMask</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Mask</ref> &amp;</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="114" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1ad9ca7088f36dd5b9ce3e9c4bdc0e9d97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::_setExtractMask</definition>
        <argsstring>(const Mask &amp;extractMask)</argsstring>
        <name>_setExtractMask</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Mask</ref> &amp;</type>
          <declname>extractMask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="115" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a278c70672667202e5a6d0c0d20a10c1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::Layer::_setNextOfTechnologyLayerMap</definition>
        <argsstring>(Layer *layer)</argsstring>
        <name>_setNextOfTechnologyLayerMap</name>
        <param>
          <type><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="116" column="33" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a2d919ec8eca14166ef392898dd3752e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Hurricane::Layer::_onDbuChange</definition>
        <argsstring>(float scale)</argsstring>
        <name>_onDbuChange</name>
        <reimplementedby refid="classHurricane_1_1ContactLayer_1a9ad7c6d2681b50c5ab808240ebf39f52">_onDbuChange</reimplementedby>
        <reimplementedby refid="classHurricane_1_1DiffusionLayer_1a57d92da36c46fa98ee429c5ab9b8f875">_onDbuChange</reimplementedby>
        <reimplementedby refid="classHurricane_1_1RegularLayer_1a023d056508067342d892566659ce9112">_onDbuChange</reimplementedby>
        <reimplementedby refid="classHurricane_1_1TransistorLayer_1ac4ae54efe28786f4b418f94a1f99b249">_onDbuChange</reimplementedby>
        <reimplementedby refid="classHurricane_1_1ViaLayer_1a8cf3d9afa5458f5a96813b73787a08a9">_onDbuChange</reimplementedby>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="117" column="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classHurricane_1_1Layer_1ad50a6345c63ffbcb95c34947ba48bb49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
        <definition>static const Name&amp; Hurricane::Layer::_sgetName</definition>
        <argsstring>(const Layer *)</argsstring>
        <name>_sgetName</name>
        <param>
          <type>const <ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="118" column="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classHurricane_1_1Layer_1a6471e06d699bfd4b482bca5dd6d39334" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::Layer::Layer</definition>
        <argsstring>(Technology *technology, const Name &amp;name, const DbU::Unit &amp;minimalSize=0, const DbU::Unit &amp;minimalSpacing=0, const DbU::Unit &amp;pitch=0)</argsstring>
        <name>Layer</name>
        <param>
          <type><ref refid="classHurricane_1_1Technology" kindref="compound">Technology</ref> *</type>
          <declname>technology</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1Name" kindref="compound">Name</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>minimalSize</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>minimalSpacing</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="classHurricane_1_1DbU_1a4fbfa3e8c89347af76c9628ea06c4146" kindref="member">DbU::Unit</ref> &amp;</type>
          <declname>pitch</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="135" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a3a45ac4d3844ea887d5039506a3feec1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Hurricane::Layer::_postCreate</definition>
        <argsstring>()</argsstring>
        <name>_postCreate</name>
        <reimplements refid="classHurricane_1_1DBo_1a83031e41e8655303753b96e3a2d8dfcd">_postCreate</reimplements>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1abd4c37ff4cd01a7749c0b422c447655b">_postCreate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="141" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1Layer_1a286efaca54cd3e9fbc12c15d88aecdb7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Hurricane::Layer::_preDestroy</definition>
        <argsstring>()</argsstring>
        <name>_preDestroy</name>
        <reimplements refid="classHurricane_1_1DBo_1ade56902fa466b79aef9aa71a2ca8e3f8">_preDestroy</reimplements>
        <reimplementedby refid="classHurricane_1_1BasicLayer_1a38aedd75f83495ec6d1c416226d5582d">_preDestroy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="142" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> description (<bold>API</bold>) </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="classHurricane_1_1Layer_1secLayerIntro">
<title>Introduction</title>
<para>Layers are divideds in three categories: <itemizedlist>
<listitem>
<para><ref refid="classHurricane_1_1Layer" kindref="compound">Layer</ref> : the base class, it supplies a generic interface sufficent for most manipulations. However, there are cases when a specific derived class may be needed. Mostly when assembling the symbolic layers. </para>
</listitem>
<listitem>
<para><ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> : they represents the real process layers (GDS ones). They possesses the following characteristics: <itemizedlist>
<listitem>
<para>Each <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> is associated with an unique bit in the <ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Layer::Mask</ref>. This bit is used to find if a symbolic layer contains that particular <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>. </para>
</listitem>
<listitem>
<para>No dimension extentions. Database objects drawn with those layers have rectangles the exact size specified by the user. This is mandatory if you want to create a real layout (by opposition to a symbolic one). </para>
</listitem>
<listitem>
<para>They have a <bold>material</bold> field hinting the purpose of the layer (is a routing metal, a cut, a diffusion and so on). </para>
</listitem>
<listitem>
<para>They may have an associated blockage layer (for routing layers). </para>
</listitem>
</itemizedlist>
</para>
</listitem>
<listitem>
<para><bold>Symbolic Layers</bold> : used to draw the various components of a symbolic layout. They are made of a list of BasicLayers and how to extend their dimensions from the user specified sizes. <itemizedlist>
<listitem>
<para><ref refid="classHurricane_1_1RegularLayer" kindref="compound">RegularLayer</ref> : contains one <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>, use for wires. </para>
</listitem>
<listitem>
<para><ref refid="classHurricane_1_1ViaLayer" kindref="compound">ViaLayer</ref> : contains three <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>, for contact between metal layers. The BasicLayers must be of <computeroutput></computeroutput>(metal,cut,metal) materials. </para>
</listitem>
<listitem>
<para><ref refid="classHurricane_1_1ContactLayer" kindref="compound">ContactLayer</ref> : contains four or five BasicLayers, for contact towards active layers or transistor gates. The fifth optional parameter is the well. Materials of the components must be of type <computeroutput></computeroutput>(metal,cut,active,diffusion[,well]) </para>
</listitem>
<listitem>
<para><ref refid="classHurricane_1_1DiffusionLayer" kindref="compound">DiffusionLayer</ref> : contains three <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>, for diffusion area. Materials of the components must be of type <computeroutput></computeroutput>(active,diffusion,well). </para>
</listitem>
<listitem>
<para><ref refid="classHurricane_1_1TransistorLayer" kindref="compound">TransistorLayer</ref> : contains three to four layers, for representing digital transistors. Materials are of type : <computeroutput></computeroutput>(gate,active,diffusion,well). </para>
</listitem>
</itemizedlist>
</para>
</listitem>
</itemizedlist>
</para>
<para>Like for the <ref refid="classHurricane_1_1Technology" kindref="compound">Technology</ref> object, a layer must not be deleted, else all components located on it will have a dangling pointer to an deleted object ...</para>
<sect2 id="classHurricane_1_1Layer_1secBasicLayerOrder">
<title>BasicLayer Creation Ordering</title>
<para>The creation order is significant regarding the metal connectivity. The metal &amp; cut layers must be created in alternately fashion, for example: <center> <table rows="7" cols="3"><row>
<entry thead="yes"><para><ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref></para>
</entry><entry thead="yes"><para>Material</para>
</entry><entry thead="yes"><para><ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Layer::Mask</ref> </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>cut0</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>cut</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>0x00000010</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>metal1</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>metal</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>0x00000020</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>cut1</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>cut</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>0x00000040</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>metal2</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>metal</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>0x00000080</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>cut2</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>cut</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>0x00000100</computeroutput> </para>
</entry></row>
<row>
<entry thead="no"><para><computeroutput>metal3</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>metal</computeroutput> </para>
</entry><entry thead="yes"><para><computeroutput>0x00000200</computeroutput> </para>
</entry></row>
</table>
</center></para>
</sect2>
<sect2 id="classHurricane_1_1Layer_1secLayerLookup">
<title>Looking Up a Layer from a Mask</title>
<para>A <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref> is uniquely associated to a bit in the <ref refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" kindref="member">Layer::Mask</ref>. But, multiple symbolic layers could be built over that <ref refid="classHurricane_1_1BasicLayer" kindref="compound">BasicLayer</ref>. In that case all those layers will have the same mask. For the mask lookup functions not to be confused, we introduce the concept of <bold>working layer</bold> in all the symbolic layers with the same mask, this is the one that will be returned. </para>
</sect2>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Hurricane::BasicLayer</label>
        <link refid="classHurricane_1_1BasicLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Hurricane::DiffusionLayer</label>
        <link refid="classHurricane_1_1DiffusionLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Hurricane::ViaLayer</label>
        <link refid="classHurricane_1_1ViaLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Hurricane::ContactLayer</label>
        <link refid="classHurricane_1_1ContactLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Hurricane::RegularLayer</label>
        <link refid="classHurricane_1_1RegularLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Hurricane::Layer</label>
        <link refid="classHurricane_1_1Layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Hurricane::TransistorLayer</label>
        <link refid="classHurricane_1_1TransistorLayer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Hurricane::DBo</label>
        <link refid="classHurricane_1_1DBo"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Hurricane::DataBase</label>
        <link refid="classHurricane_1_1DataBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_technology</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_db</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_rootLibrary</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>Hurricane::Name</label>
        <link refid="classHurricane_1_1Name"/>
        <childnode refid="6" relation="usage">
          <edgelabel>_emptyName</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Hurricane::Technology</label>
        <link refid="classHurricane_1_1Technology"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_dataBase</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Hurricane::Layer</label>
        <link refid="classHurricane_1_1Layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_technology</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>_nextOfTechnologyLayerMap</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Hurricane::Library</label>
        <link refid="classHurricane_1_1Library"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_dataBase</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_library</edgelabel>
          <edgelabel>_nextOfLibraryLibraryMap</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Hurricane::DBo</label>
        <link refid="classHurricane_1_1DBo"/>
      </node>
    </collaborationgraph>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" line="52" column="3" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/Layer.h" bodystart="52" bodyend="148"/>
    <listofallmembers>
      <member refid="classHurricane_1_1Layer_1a7e5de1f36d9746a778c18083f8101d53" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_blockage</name></member>
      <member refid="classHurricane_1_1Layer_1aec92efef3058a8e172dbbbb952bac29d" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_extractMask</name></member>
      <member refid="classHurricane_1_1DBo_1a6773bf239b646982ee463a57021e0d13" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_flags</name></member>
      <member refid="classHurricane_1_1Layer_1a40d47c3280521fc2fcdaf31ddd3f77e3" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_getNextOfTechnologyLayerMap</name></member>
      <member refid="classHurricane_1_1DBo_1ab50af0d192f88fcd9917e7f1c3bdac19" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_getPropertySet</name></member>
      <member refid="classHurricane_1_1Layer_1a47f22cdfa14bf765777a04fbeb2f76e1" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>_getRecord</name></member>
      <member refid="classHurricane_1_1Layer_1a2891ad3a9af7acea29d8b245a09c8416" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>_getString</name></member>
      <member refid="classHurricane_1_1DBo_1af7f24f206bc6822b9bb6ab589948e7e2" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>_getTypeName</name></member>
      <member refid="classHurricane_1_1DBo_1a4d59fe852677ac51d622b83fcc5d6d2f" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_id</name></member>
      <member refid="classHurricane_1_1DBo_1abb3b5e900339fbc152bef116f93b60a3" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_idCount</name></member>
      <member refid="classHurricane_1_1DBo_1a5b13b87d2b79bfab236672d5e2c35065" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_idCounter</name></member>
      <member refid="classHurricane_1_1DBo_1a53710abe54e5f872501c76ccb9d9d250" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_idCounterLimit</name></member>
      <member refid="classHurricane_1_1Layer_1ade957bc4a9ecd6a0f41d270d5339e1c5" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_mask</name></member>
      <member refid="classHurricane_1_1DBo_1a4075e1c82992b65e4ef9910962435499" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_memoryLimit</name></member>
      <member refid="classHurricane_1_1Layer_1ace6cd3237329c674b10c2d78e86050ee" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_minimalArea</name></member>
      <member refid="classHurricane_1_1Layer_1a6725cf7e5d5f6e5e64cdd5ac0f52a860" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_minimalSize</name></member>
      <member refid="classHurricane_1_1Layer_1a44074cd58253d477d5328e3a47c56da7" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_minimalSpacing</name></member>
      <member refid="classHurricane_1_1Layer_1a622c08c4f60322fa9476183a301bd1c0" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_name</name></member>
      <member refid="classHurricane_1_1DBo_1aaa25cf153535cbde027cf410dab9d185" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_nextId</name></member>
      <member refid="classHurricane_1_1Layer_1a92a8319818044b4ebabd5301f31f0043" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_nextOfTechnologyLayerMap</name></member>
      <member refid="classHurricane_1_1Layer_1a2d919ec8eca14166ef392898dd3752e1" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>_onDbuChange</name></member>
      <member refid="classHurricane_1_1DBo_1a04ee2304b85563a6b5864fdb8284ab6c" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_onDestroyed</name></member>
      <member refid="classHurricane_1_1Layer_1a3a45ac4d3844ea887d5039506a3feec1" prot="protected" virt="virtual"><scope>Hurricane::Layer</scope><name>_postCreate</name></member>
      <member refid="classHurricane_1_1Layer_1a286efaca54cd3e9fbc12c15d88aecdb7" prot="protected" virt="virtual"><scope>Hurricane::Layer</scope><name>_preDestroy</name></member>
      <member refid="classHurricane_1_1DBo_1a932cca69b2744cad5ea1342c31386e77" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_propertySet</name></member>
      <member refid="classHurricane_1_1Layer_1ad9ca7088f36dd5b9ce3e9c4bdc0e9d97" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_setExtractMask</name></member>
      <member refid="classHurricane_1_1Layer_1a4a04a05ed743a8c25d6691bc250a1fbf" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_setMask</name></member>
      <member refid="classHurricane_1_1Layer_1a278c70672667202e5a6d0c0d20a10c1e" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_setNextOfTechnologyLayerMap</name></member>
      <member refid="classHurricane_1_1Layer_1ad50a6345c63ffbcb95c34947ba48bb49" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_sgetName</name></member>
      <member refid="classHurricane_1_1Layer_1a5230e9b64ffff149946df06ae79086ef" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_symbolic</name></member>
      <member refid="classHurricane_1_1Layer_1af2db141d9729a136e25eaefd6549d2b2" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>_technology</name></member>
      <member refid="classHurricane_1_1Layer_1a2454f6bdc9acb09c8631fe6e48eb6b71" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>_toJson</name></member>
      <member refid="classHurricane_1_1DBo_1a199aab196fb4d08a797f46e9fbf011c6" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>_toJsonCollections</name></member>
      <member refid="classHurricane_1_1DBo_1a5a30676a8ddfd2f6848974f9d0b228f2" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>_toJsonSignature</name></member>
      <member refid="classHurricane_1_1Layer_1abbd13bf66cf75dd6445d0353987119f3" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>above</name></member>
      <member refid="classHurricane_1_1Layer_1a090f8697946f721351a626052af25027" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>below</name></member>
      <member refid="classHurricane_1_1DBo_1a3e02f3d665cb0b2120df2fdfe9c3df4f" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>clearProperties</name></member>
      <member refid="classHurricane_1_1Layer_1af63dd0a48e2a3514a1cdaccd4586bad8" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>contains</name></member>
      <member refid="classHurricane_1_1DBo_1ace975ea52394a9905814d31e80297a77" prot="protected" virt="non-virtual"><scope>Hurricane::Layer</scope><name>DBo</name></member>
      <member refid="classHurricane_1_1DBo_1acdd9ad2dbeaf5f8c39a5ceacc36c7f5f" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>DBo</name></member>
      <member refid="classHurricane_1_1DBo_1a4d4b88db5041d12c23f2ab5ea8646b67" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>DBoFlags</name></member>
      <member refid="classHurricane_1_1DBo_1a67febf5bf9c8b322674648688639728b" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>destroy</name></member>
      <member refid="classHurricane_1_1DBo_1a966833baed35b35013f074e6888492b6" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>disableForcedIdMode</name></member>
      <member refid="classHurricane_1_1DBo_1a7878335cfa4f8531db5c922fb47d2f20" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>enableForcedIdMode</name></member>
      <member refid="classHurricane_1_1Layer_1a4d6c9d1985196e73c7b9c6381beaf043" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>EnclosureH</name></member>
      <member refid="classHurricane_1_1Layer_1a646370c1fcdaf7bd8176b4244ebb572e" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>EnclosureMax</name></member>
      <member refid="classHurricane_1_1Layer_1ae42c305f9d5720d789e8b6cc05fcc7cf" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>EnclosureV</name></member>
      <member refid="classHurricane_1_1Layer_1ac2ab4a3febd49f428bd066242e42280d" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>ExtensionCap</name></member>
      <member refid="classHurricane_1_1Layer_1a9f555decd6aff4fcb2e1688b9bc11d9e" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>ExtensionWidth</name></member>
      <member refid="classHurricane_1_1DBo_1a4d4b88db5041d12c23f2ab5ea8646b67a9a189cbf2b334e5142c34cb731cb7a83" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>ForcedIdMode</name></member>
      <member refid="classHurricane_1_1Layer_1a7e953c126a02952e3a0b0d32f37e2ae0" prot="public" virt="pure-virtual"><scope>Hurricane::Layer</scope><name>getBasicLayers</name></member>
      <member refid="classHurricane_1_1Layer_1a6da189eab232c3d8d8c89269588a2d14" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getBlockageLayer</name></member>
      <member refid="classHurricane_1_1Layer_1a4dab4552a219d2d900ed0b1245dc6580" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getBottom</name></member>
      <member refid="classHurricane_1_1Layer_1ac76508166c50f83173a9e04607a7bbbe" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getBottomEnclosure</name></member>
      <member refid="classHurricane_1_1Layer_1ab5466dfd96d7bc45196c5c027658a8e2" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getCut</name></member>
      <member refid="classHurricane_1_1Layer_1ad9fca94fed1837e3e80e9b6445822b7d" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getCutAbove</name></member>
      <member refid="classHurricane_1_1Layer_1a983956c8127688390f978cc5bd0d768d" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getCutBelow</name></member>
      <member refid="classHurricane_1_1Layer_1a1ebce43b438610979f50b5ff95c1d972" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getEnclosure</name></member>
      <member refid="classHurricane_1_1Layer_1a0afb51d5f191408ab48f9c133d0f8d12" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getEnclosure</name></member>
      <member refid="classHurricane_1_1Layer_1a8cfdc1089644b8dcf671249b83fb5905" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getExtentionCap</name></member>
      <member refid="classHurricane_1_1Layer_1a054659082ee4630aa93c6efe94a8cee9" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getExtentionCap</name></member>
      <member refid="classHurricane_1_1Layer_1a5f867b79fd0ef630f53033b4bc38804b" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getExtentionWidth</name></member>
      <member refid="classHurricane_1_1Layer_1afef1036df50f5b93cb09d2f3de929b19" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getExtentionWidth</name></member>
      <member refid="classHurricane_1_1Layer_1af009bbd89a8e8260122b7244bfa10349" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getExtractMask</name></member>
      <member refid="classHurricane_1_1DBo_1a518b1604b342e7daed165aecde194864" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getId</name></member>
      <member refid="classHurricane_1_1DBo_1a83ac55491d02b4fd14d5583eae153032" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getIdCounter</name></member>
      <member refid="classHurricane_1_1Layer_1a29b22c3b59cc24bf82449ad6c068ff1f" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getMask</name></member>
      <member refid="classHurricane_1_1Layer_1ac32eff2dc51180660fe9b4ce17cae42c" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getMetalAbove</name></member>
      <member refid="classHurricane_1_1Layer_1a4bc8358f67c1a1a9b2581e4b3732108c" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getMetalBelow</name></member>
      <member refid="classHurricane_1_1Layer_1a265005f55b2f464b1888aae1d9bc5b74" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getMinimalArea</name></member>
      <member refid="classHurricane_1_1Layer_1afed9a488bf20daaeed18874f2b16268e" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getMinimalSize</name></member>
      <member refid="classHurricane_1_1Layer_1a6a03f9f40ca855d33763497162414062" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getMinimalSpacing</name></member>
      <member refid="classHurricane_1_1Layer_1a3dc54f6efc60fddb8529599caa6b0f1f" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getName</name></member>
      <member refid="classHurricane_1_1DBo_1ab5dcb87dc003ed982ec45abe237e34c5" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getNextId</name></member>
      <member refid="classHurricane_1_1Layer_1a69e76c09a56260169c4f5c145a35a47f" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getOpposite</name></member>
      <member refid="classHurricane_1_1DBo_1aec46894a10e83abb54c495dc4d90f2d3" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getProperties</name></member>
      <member refid="classHurricane_1_1DBo_1a599f61978df51d1d4c351f6cbd02488d" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getProperty</name></member>
      <member refid="classHurricane_1_1Layer_1ae506b17bd7a245de622f8a8e9947629b" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>getTechnology</name></member>
      <member refid="classHurricane_1_1Layer_1a5f7c43a29f3dd02a9ebccbcbf91d6727" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getTop</name></member>
      <member refid="classHurricane_1_1Layer_1aa260137e48e82bc5aa193ec5231611ff" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>getTopEnclosure</name></member>
      <member refid="classHurricane_1_1DBo_1a1563f094565030c77592ed82f9a9989b" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>hasProperty</name></member>
      <member refid="classHurricane_1_1DBo_1a05e3adb61e02e99a34e71b8d8d5d76ad" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>inForcedIdMode</name></member>
      <member refid="classHurricane_1_1Layer_1adbea0bafaa87b033efdaa98bf2709182" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>intersect</name></member>
      <member refid="classHurricane_1_1Layer_1a9a3ca3b9b6fe8fbf87b235bbe92e11a0" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>isBlockage</name></member>
      <member refid="classHurricane_1_1Layer_1a9a3cef8ec43e2f98d6905ce5dab198e3" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>isSymbolic</name></member>
      <member refid="classHurricane_1_1Layer_1a6471e06d699bfd4b482bca5dd6d39334" prot="protected" virt="non-virtual"><scope>Hurricane::Layer</scope><name>Layer</name></member>
      <member refid="classHurricane_1_1Layer_1af5277c670637bd5d910237e7afe01a91" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>Mask</name></member>
      <member refid="classHurricane_1_1DBo_1a4d4b88db5041d12c23f2ab5ea8646b67a79979f9fda436b69b9b2b75e95b7d952" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>NextIdSet</name></member>
      <member refid="classHurricane_1_1Layer_1a5c0a859005d2dd842c30aaee7061b101" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>NoFlags</name></member>
      <member refid="classHurricane_1_1DBo_1a3da78a35f2788eb92e41537be505bf43" prot="private" virt="non-virtual"><scope>Hurricane::Layer</scope><name>operator=</name></member>
      <member refid="classHurricane_1_1DBo_1a8979674f11507cb4c7c5251b41ed72d5" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>put</name></member>
      <member refid="classHurricane_1_1DBo_1a7833a1f0b8c704930bdc00861e63cf5e" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>remove</name></member>
      <member refid="classHurricane_1_1DBo_1ac35fbb8303b1a78db5ca0fc831fb6a0c" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>removeProperty</name></member>
      <member refid="classHurricane_1_1DBo_1ad2aab57665670320ca7b435e57ac2aae" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>resetId</name></member>
      <member refid="classHurricane_1_1Layer_1af45f8189ac78b0b439215479f2acba4b" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setBlockage</name></member>
      <member refid="classHurricane_1_1Layer_1a04e9c983525d074508d7e10107c1c3c7" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>setEnclosure</name></member>
      <member refid="classHurricane_1_1Layer_1a55c7b39e000442ea36a0774d26b7fbde" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>setExtentionCap</name></member>
      <member refid="classHurricane_1_1Layer_1a7a6943dbcb3403aff34056cd5de00e66" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>setExtentionWidth</name></member>
      <member refid="classHurricane_1_1DBo_1aad89937459f6b789e9756c96064aa291" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setId</name></member>
      <member refid="classHurricane_1_1DBo_1ab429e40225a556a242f728d56de0c5d4" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setIdCounterLimit</name></member>
      <member refid="classHurricane_1_1DBo_1a2c50a00301fd849d05f44f33b60681df" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setMemoryLimit</name></member>
      <member refid="classHurricane_1_1Layer_1ad4af0ce58f523b94d6f153877882a3e6" prot="public" virt="virtual"><scope>Hurricane::Layer</scope><name>setMinimalArea</name></member>
      <member refid="classHurricane_1_1Layer_1a400d17fe999c0080bb50489948986fe7" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setMinimalSize</name></member>
      <member refid="classHurricane_1_1Layer_1a81a8a24526e8535fba5a35cdcc194a8f" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setMinimalSpacing</name></member>
      <member refid="classHurricane_1_1Layer_1ab93809f19bc360f58d35e91438ef2f87" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setName</name></member>
      <member refid="classHurricane_1_1DBo_1a2974f36de2478d194d56db4fe783c99e" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setNextId</name></member>
      <member refid="classHurricane_1_1Layer_1afc623b3fd4ed529df5ee6c0e098e823d" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>setSymbolic</name></member>
      <member refid="classHurricane_1_1Layer_1a183b5d88fd832b5cb43ba8fd5ccac3d1" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>Super</name></member>
      <member refid="classHurricane_1_1DBo_1a87d9a6e41a01e0ce9f17630317b58184" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>toJson</name></member>
      <member refid="classHurricane_1_1DBo_1a5fdec3fb3b2c0b2832d137e00d73365b" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>toJsonSignature</name></member>
      <member refid="classHurricane_1_1DBo_1a1b3a6c9d1979ed9ed1157badc1abefaf" prot="public" virt="non-virtual"><scope>Hurricane::Layer</scope><name>useIdCounter2</name></member>
      <member refid="classHurricane_1_1DBo_1a59767f0958f57a01b2a708ee814ecdfe" prot="protected" virt="virtual"><scope>Hurricane::Layer</scope><name>~DBo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
