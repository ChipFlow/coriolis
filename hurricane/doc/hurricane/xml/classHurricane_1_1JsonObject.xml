<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classHurricane_1_1JsonObject" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Hurricane::JsonObject</compoundname>
    <derivedcompoundref refid="classHurricane_1_1Cell_1_1SlavedsRelation_1_1JsonProperty" prot="public" virt="non-virtual">Hurricane::Cell::SlavedsRelation::JsonProperty</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1Cell_1_1SlavedsRelation_1_1JsonPropertyRef" prot="public" virt="non-virtual">Hurricane::Cell::SlavedsRelation::JsonPropertyRef</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1Cell_1_1UniquifyRelation_1_1JsonProperty" prot="public" virt="non-virtual">Hurricane::Cell::UniquifyRelation::JsonProperty</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1Cell_1_1UniquifyRelation_1_1JsonPropertyRef" prot="public" virt="non-virtual">Hurricane::Cell::UniquifyRelation::JsonPropertyRef</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonBaseArray" prot="public" virt="non-virtual">Hurricane::JsonBaseArray&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonBox" prot="public" virt="non-virtual">Hurricane::JsonBox</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonDBo" prot="public" virt="non-virtual">Hurricane::JsonDBo</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonDummy" prot="public" virt="non-virtual">Hurricane::JsonDummy</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonEntityRef" prot="public" virt="non-virtual">Hurricane::JsonEntityRef</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonKey" prot="public" virt="non-virtual">Hurricane::JsonKey</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonOccurrence" prot="public" virt="non-virtual">Hurricane::JsonOccurrence</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonPlugRef" prot="public" virt="non-virtual">Hurricane::JsonPlugRef</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonPoint" prot="public" virt="non-virtual">Hurricane::JsonPoint</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1JsonTransformation" prot="public" virt="non-virtual">Hurricane::JsonTransformation</derivedcompoundref>
    <derivedcompoundref refid="classHurricane_1_1StandardPrivateProperty_1_1JsonProperty" prot="public" virt="non-virtual">Hurricane::StandardPrivateProperty&lt; Value, JsonState &gt;::JsonProperty</derivedcompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classHurricane_1_1JsonObject_1abda35fef78180d410c85635fcec1f66b" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Hurricane::JsonObject::_flags</definition>
        <argsstring></argsstring>
        <name>_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="112" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1JsonObject_1a55a27092fcbd9c34a73990e7a603332b" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Hurricane::JsonObject::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="113" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1JsonObject_1abeea03a6622af5dd458debbd5c399d41" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; JsonAttribute &gt;</type>
        <definition>std::vector&lt;JsonAttribute&gt; Hurricane::JsonObject::_stackeds</definition>
        <argsstring></argsstring>
        <name>_stackeds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="114" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1JsonObject_1aa0024b924886b852072a8dd5cd77c624" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; JsonAttribute &gt;</type>
        <definition>std::vector&lt;JsonAttribute&gt; Hurricane::JsonObject::_attributes</definition>
        <argsstring></argsstring>
        <name>_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="115" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1JsonObject_1a9a3f377904a1402c9b189fa0da8e09ef" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; JsonAttribute &gt;</type>
        <definition>std::vector&lt;JsonAttribute&gt; Hurricane::JsonObject::_collections</definition>
        <argsstring></argsstring>
        <name>_collections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="116" column="20" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classHurricane_1_1JsonObject_1a6840b38ed36f7b99b7c0ca33d31938f7" prot="protected" static="no" mutable="no">
        <type>boost::any</type>
        <definition>boost::any Hurricane::JsonObject::_object</definition>
        <argsstring></argsstring>
        <name>_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="117" column="35" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a57d9c022204b30d4b253c2588f2c1215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Hurricane::JsonObject::JsonObject</definition>
        <argsstring>(unsigned long flags)</argsstring>
        <name>JsonObject</name>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags sets by derived classes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Base object to be used by all JSON parsers. Provides helpers functions. Store three separated lists of requirements/attributes needes to build the object.<itemizedlist>
<listitem><para><computeroutput>stackeds</computeroutput> : thoses are <bold>not</bold> attributes of the current object, but other objects that are expected to be already in the stack. They are needed to build the current object. Their key must start with a <computeroutput>&apos;</computeroutput>.&apos; character.</para>
</listitem><listitem><para><computeroutput>attributes</computeroutput> : the simple attributes of the object. Their key must start with a <computeroutput>&apos;_&apos;</computeroutput>.</para>
</listitem><listitem><para><computeroutput>collections</computeroutput> : any container, collection or whatever set of other objects part of the current object. Their key must start with a <computeroutput>&apos;+&apos;</computeroutput> character.</para>
</listitem></itemizedlist>
</para>
<para>For adding a requirement/attribute, see <ref refid="classHurricane_1_1JsonObject_1a39ed04c118b19f1b6010b7f3336c360f" kindref="member">JsonObject::add()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="85" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a05fded364c9bc8011097245e9186a106" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Hurricane::JsonObject::~JsonObject</definition>
        <argsstring>()</argsstring>
        <name>~JsonObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="86" column="50"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a8f0949b75f5900e4ef87196e949cfa6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Hurricane::JsonObject::isDummy</definition>
        <argsstring>() const</argsstring>
        <name>isDummy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if the concrete object is of type <computeroutput>JsonDummy</computeroutput>, <bold>false</bold> otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="87" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a947e1c3f8dbae63bb2d086b5b827a2a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>string Hurricane::JsonObject::getTypeName</definition>
        <argsstring>() const =0</argsstring>
        <name>getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The typename of the concrete object, that is, the value of the <computeroutput>@typename</computeroutput>  key of the JSON object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="88" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a34c4e38611238021df8cc69fc32f5e48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Hurricane::JsonObject::getStackName</definition>
        <argsstring>() const</argsstring>
        <name>getStackName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The key with which the <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object will be pushed on the parser stack.</para>
<para>If the current object is associated to an attribute (that is, a key in JSON), then the <computeroutput>name</computeroutput> attribute of the <ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> should have been set, and it will be returned here.</para>
<para>If the <computeroutput>name</computeroutput> attribute has not been set (for example, because we are in an array). Then the typename (<ref refid="classHurricane_1_1JsonObject_1a947e1c3f8dbae63bb2d086b5b827a2a5" kindref="member">JsonObject::getTypeName()</ref>), prefixed by a <computeroutput>&apos;</computeroutput>.&apos; character will be returned.</para>
<para>If the <ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> is, for instance, a JsonBox (typename: <computeroutput>&quot;Box&quot;</computeroutput>) :<itemizedlist>
<listitem><para>If <computeroutput>name</computeroutput> is set to <computeroutput>&quot;_abutmentBox&quot;</computeroutput>, the box will be stacked with that key.</para>
</listitem><listitem><para>If <computeroutput>name</computeroutput> is <bold>not</bold> set, then the key will be <computeroutput>&quot;.Box&quot;</computeroutput>. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="89" column="51" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="128" bodyend="129"/>
        <referencedby refid="classHurricane_1_1JsonObject_1ace589494452d9d797506286613642cd4" compoundref="JsonObject_8h" startline="406" endline="412">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a6ac9230d36590f83fbe1561b6c1bb0e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::JsonObject::check</definition>
        <argsstring>(JsonStack &amp;, std::string fname) const</argsstring>
        <name>check</name>
        <param>
          <type><ref refid="classHurricane_1_1JsonStack" kindref="compound">JsonStack</ref> &amp;</type>
        </param>
        <param>
          <type>std::string</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the objects already parsed are stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>The function name on behalf of which the check is performed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if the check is successful.</para>
</simplesect>
Check that the <computeroutput>stack</computeroutput> actually contains all the objects (i.e. attributes) needed to build the current object. The list of <emphasis>attributes</emphasis> is built using the <ref refid="classHurricane_1_1JsonObject_1a39ed04c118b19f1b6010b7f3336c360f" kindref="member">JsonObject::add()</ref> function. If an attribute is missing, a warning is issued, but the parser will try to continue. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="90" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1aa5e7db69e2c7f5e5c4482357dae73082" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::JsonObject::print</definition>
        <argsstring>(std::ostream &amp;) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="91" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1ac0b8816eab2cbcabf18d5421a59aa780" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::JsonObject::has</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>has</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key name to search for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if the object possess such a key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="92" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a39ed04c118b19f1b6010b7f3336c360f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::JsonObject::add</definition>
        <argsstring>(const std::string &amp;key, std::type_index tid)</argsstring>
        <name>add</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::type_index</type>
          <declname>tid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The requirement/attribute to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>The type index of the attribute.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Adds a new requirement or attribute to the object. The first character of the key tells which kind it is:<itemizedlist>
<listitem><para><computeroutput>&apos;</computeroutput>.&apos; : a requirement (not part of the object) that must be present in the stack.</para>
</listitem><listitem><para><computeroutput>&apos;_&apos;</computeroutput> : a simple attribute of the object.</para>
</listitem><listitem><para><computeroutput>&apos;+&apos;</computeroutput> : belongs to a collection or container.</para>
</listitem></itemizedlist>
</para>
<para>A more detailed description could be found in <ref refid="classHurricane_1_1JsonObject_1a57d9c022204b30d4b253c2588f2c1215" kindref="member">JsonObject::JsonObject()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="93" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a6435e5a8655a6b42b61d55e7fd673c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::JsonObject::remove</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>remove</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the requirement/attribute to remove.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Removes an attribute from the current object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="94" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1af599fb8e2f3aca9c00dc628927367cb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T Hurricane::JsonObject::get</definition>
        <argsstring>(JsonStack &amp;, const std::string &amp;key) const</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="classHurricane_1_1JsonStack" kindref="compound">JsonStack</ref> &amp;</type>
          <defname>stack</defname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>The object stack of the parser. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the requested object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first object associated with <computeroutput>key</computeroutput>, starting <emphasis>from the top</emphasis> of the stack.</para>
</simplesect>
Retrieve requirements or attributes from the parser stack.<itemizedlist>
<listitem><para>If no element with a corresponding key is found, an empty element of type <computeroutput>T</computeroutput> is returned (by calling the default <computeroutput>T</computeroutput> constructor).</para>
</listitem><listitem><para>If an element matching the key is found, <bold>but</bold> it&apos;s type do not match <computeroutput>T</computeroutput>, an exception from <computeroutput>any_cast&lt;&gt;</computeroutput> will be thrown. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="95" column="41" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="382" bodyend="389"/>
        <references refid="classHurricane_1_1JsonStack_1aed841c5329cfb5a72e7df326e995ce73" compoundref="JsonObject_8h" startline="333" endline="355">Hurricane::JsonStack::as</references>
        <references refid="classHurricane_1_1JsonStack_1a6416903ee046d6b8122fe2ffe8c0751b" compoundref="JsonObject_8h" startline="312" endline="331">Hurricane::JsonStack::rhas</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a7a3fe903ceb00a3ebff66d1696edf682" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T * Hurricane::JsonObject::jget</definition>
        <argsstring>(JsonStack &amp;) const</argsstring>
        <name>jget</name>
        <param>
          <type><ref refid="classHurricane_1_1JsonStack" kindref="compound">JsonStack</ref> &amp;</type>
          <defname>stack</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>The parser stack. <bold>Returns:</bold> the first <ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> that can be cast into type <computeroutput>T*</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Search the <ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> stack, from the top, the first object that can be cast into type <computeroutput>T*</computeroutput>. Base classes can be used here, as the <computeroutput>dynamic_cast&lt;&gt;</computeroutput> operator is used to perform the casts.</para>
<para>This function <bold>always</bold> return a pointer (never a value). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="96" column="40" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="392" bodyend="403"/>
        <references refid="classHurricane_1_1JsonStack_1a974ee9daf5dbf861ed50cae0a51a5cbb" compoundref="JsonObject_8h" startline="374" endline="374">Hurricane::JsonStack::jobjects</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a380ea9ac8689e1e9cad892edf0024c08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::JsonObject::copyAttrs</definition>
        <argsstring>(const JsonObject *, bool reset=false)</argsstring>
        <name>copyAttrs</name>
        <param>
          <type>const <ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> *</type>
          <defname>other</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>reset</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The object from which to copy attributes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reset</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to keep or erase the original attributes of the object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Copy the attributes from <computeroutput>other</computeroutput> into the current object. <bold>Only</bold> the <bold>attributes</bold> are copied. Neither the requirements, nor the collections. By default, the attributes are added to the existing one of the object, but if <computeroutput>reset</computeroutput> is <bold>true</bold>, the original ones will be suppresseds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="97" column="51" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a5f11139263926dbd8fe87b9c4480bdae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::JsonObject::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all requirements/attributes/collections of the object. Also unbind it from any generated <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="98" column="51" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="144" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1aa4d6d0502f0f25e614ef50ac3dd76263" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Hurricane::JsonObject::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The name of the whole object as attribute.</para>
<para>During the parsing of the JSON structure, excepted when in an array, an object is associated with a key. This is the string returned by this function. It is called <computeroutput><ref refid="classHurricane_1_1JsonObject_1aa4d6d0502f0f25e614ef50ac3dd76263" kindref="member">getName()</ref></computeroutput> instead of <computeroutput>getKey()</computeroutput> to avoid confusing with the attributes keys. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="99" column="51" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1aeda98a478720cf29e532e2a11f6f54c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Hurricane::JsonObject::setName</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>setName</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Set the key associated to this object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
See <ref refid="classHurricane_1_1JsonObject_1aa4d6d0502f0f25e614ef50ac3dd76263" kindref="member">JsonObject::getName()</ref> for the meaning of the name (key). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="100" column="51" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1ab1a1aaaa583d5c8f7adbc9c9d0eeeebf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T Hurricane::JsonObject::getObject</definition>
        <argsstring>() const</argsstring>
        <name>getObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> The associated <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object.</para>
<para>Once all the attributes have been gathered, the creation of the <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object is triggered by calling <ref refid="classHurricane_1_1JsonObject_1a57a845ca64ac8912b35c4dbf75723af6" kindref="member">JsonObject::toData()</ref>. We keep track of that <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object by storing it (or a pointer to it) in an <computeroutput>boost::any</computeroutput> field of the <ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="101" column="41" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="131" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1aa8e23d2445b90cced19a97d50372314c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Hurricane::JsonObject::setObject</definition>
        <argsstring>(T)</argsstring>
        <name>setObject</name>
        <param>
          <type>T</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Associate the constructed <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object <computeroutput>T</computeroutput> to the JSON object (for later access). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="102" column="41" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="134" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a4bb80844dcd175ad16cf92ee29064850" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::JsonObject::isBound</definition>
        <argsstring>() const</argsstring>
        <name>isBound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> <bold>true</bold> if a <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object is associated to the JSON object (see <ref refid="classHurricane_1_1JsonObject_1aa8e23d2445b90cced19a97d50372314c" kindref="member">JsonObject::setObject()</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="103" column="51" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a939cfbae43f7b0d994648d07bdba2b32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> *</type>
        <definition>JsonObject * Hurricane::JsonObject::clone</definition>
        <argsstring>(unsigned long flags) const =0</argsstring>
        <name>clone</name>
        <param>
          <type>unsigned long</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><bold>Returns:</bold> a new <bold>empty</bold> object <emphasis>of the same dynamic type</emphasis> as the source one.</para>
<para>This is not a true clone operation in the sense that the datas of the original object are not copied. The cloning is about the type, and is the result of a call to the <computeroutput>new</computeroutput> operator.</para>
<para>\Important This method must be overloaded in each concrete derived class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="104" column="50"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a57a845ca64ac8912b35c4dbf75723af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Hurricane::JsonObject::toData</definition>
        <argsstring>(JsonStack &amp;)</argsstring>
        <name>toData</name>
        <param>
          <type><ref refid="classHurricane_1_1JsonStack" kindref="compound">JsonStack</ref> &amp;</type>
          <defname>stack</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>parser object stack.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
\Important This method must be overloaded in each concrete derived class.</para>
<para>Creates the <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object. The requirements and attributes must be on top of the stack, they are popped, the <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object is created from them and the result is then pushed back. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="105" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a3819d0c96ee99277e4cc8d349dc4155c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Hurricane::JsonObject::presetId</definition>
        <argsstring>(JsonStack &amp;)</argsstring>
        <name>presetId</name>
        <param>
          <type><ref refid="classHurricane_1_1JsonStack" kindref="compound">JsonStack</ref> &amp;</type>
          <defname>stack</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>The parser object stack. <bold>Returns:</bold> the <emphasis>next id</emphasis> that has been set.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
\Remark This is a helper for JsonStack::toData().</para>
<para>In blob mode, the <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> must be restored <emphasis>as is</emphasis>, including the <computeroutput>ids</computeroutput> of all the Entities (see <ref refid="classHurricane_1_1Entity" kindref="compound">Entity</ref>). This function read from the stack the <computeroutput>_id</computeroutput> attribute and sets it so that the next <ref refid="classHurricane_1_1Entity" kindref="compound">Entity</ref> created will use it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="106" column="51"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1ace589494452d9d797506286613642cd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Hurricane::JsonObject::update</definition>
        <argsstring>(JsonStack &amp;, T)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="classHurricane_1_1JsonStack" kindref="compound">JsonStack</ref> &amp;</type>
          <defname>stack</defname>
        </param>
        <param>
          <type>T</type>
          <defname>hobject</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stack</parametername>
</parameternamelist>
<parameterdescription>
<para>parser object stack. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hobject</parametername>
</parameternamelist>
<parameterdescription>
<para>the newly created <ref refid="classHurricane_1_1DataBase" kindref="compound">DataBase</ref> object.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
\Remark This is a helper for JsonStack::toData().</para>
<para>Pop the attributes from the stack. Push the newly created object and bind it to the <ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="107" column="41" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="406" bodyend="412"/>
        <references refid="classHurricane_1_1JsonObject_1a34c4e38611238021df8cc69fc32f5e48" compoundref="JsonObject_8h" startline="128" endline="129">getStackName</references>
        <references refid="classHurricane_1_1JsonStack_1a668d3c1974efefb6ced90544b4703fe5" compoundref="JsonObject_8h" startline="292" endline="304">Hurricane::JsonStack::pop_back</references>
        <references refid="classHurricane_1_1JsonStack_1a189a4e74a62f898f5fe903a185181bc5" compoundref="JsonObject_8h" startline="285" endline="290">Hurricane::JsonStack::push_back</references>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a5216e5f5d74f8dbf8665eef8a78b2fe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> *</type>
        <definition>JsonObject * Hurricane::JsonObject::setFlags</definition>
        <argsstring>(unsigned long mask)</argsstring>
        <name>setFlags</name>
        <param>
          <type>unsigned long</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag(s) to be raised. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="108" column="50" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a8346b1c958574275fe17f9c4cb40ee8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classHurricane_1_1JsonObject" kindref="compound">JsonObject</ref> *</type>
        <definition>JsonObject * Hurricane::JsonObject::resetFlags</definition>
        <argsstring>(unsigned long mask)</argsstring>
        <name>resetFlags</name>
        <param>
          <type>unsigned long</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag(s) to be lowered. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="109" column="50" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classHurricane_1_1JsonObject_1a267c55a1989a9907e25632d820681779" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Hurricane::JsonObject::issetFlags</definition>
        <argsstring>(unsigned long mask) const</argsstring>
        <name>issetFlags</name>
        <param>
          <type>unsigned long</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>The combination of flags to be checked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if <bold>all</bold> the flags given in <computeroutput>mask</computeroutput> are sets. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="110" column="51" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="126" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Support for JSON export. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" line="83" column="3" bodyfile="/dsk/l1/jpc/coriolis-2.x/src/coriolis/hurricane/src/hurricane/hurricane/JsonObject.h" bodystart="83" bodyend="118"/>
    <listofallmembers>
      <member refid="classHurricane_1_1JsonObject_1aa0024b924886b852072a8dd5cd77c624" prot="protected" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>_attributes</name></member>
      <member refid="classHurricane_1_1JsonObject_1a9a3f377904a1402c9b189fa0da8e09ef" prot="protected" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>_collections</name></member>
      <member refid="classHurricane_1_1JsonObject_1abda35fef78180d410c85635fcec1f66b" prot="protected" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>_flags</name></member>
      <member refid="classHurricane_1_1JsonObject_1a55a27092fcbd9c34a73990e7a603332b" prot="protected" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>_name</name></member>
      <member refid="classHurricane_1_1JsonObject_1a6840b38ed36f7b99b7c0ca33d31938f7" prot="protected" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>_object</name></member>
      <member refid="classHurricane_1_1JsonObject_1abeea03a6622af5dd458debbd5c399d41" prot="protected" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>_stackeds</name></member>
      <member refid="classHurricane_1_1JsonObject_1a39ed04c118b19f1b6010b7f3336c360f" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>add</name></member>
      <member refid="classHurricane_1_1JsonObject_1a6ac9230d36590f83fbe1561b6c1bb0e5" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>check</name></member>
      <member refid="classHurricane_1_1JsonObject_1a5f11139263926dbd8fe87b9c4480bdae" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>clear</name></member>
      <member refid="classHurricane_1_1JsonObject_1a939cfbae43f7b0d994648d07bdba2b32" prot="public" virt="pure-virtual"><scope>Hurricane::JsonObject</scope><name>clone</name></member>
      <member refid="classHurricane_1_1JsonObject_1a380ea9ac8689e1e9cad892edf0024c08" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>copyAttrs</name></member>
      <member refid="classHurricane_1_1JsonObject_1af599fb8e2f3aca9c00dc628927367cb8" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>get</name></member>
      <member refid="classHurricane_1_1JsonObject_1aa4d6d0502f0f25e614ef50ac3dd76263" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>getName</name></member>
      <member refid="classHurricane_1_1JsonObject_1ab1a1aaaa583d5c8f7adbc9c9d0eeeebf" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>getObject</name></member>
      <member refid="classHurricane_1_1JsonObject_1a34c4e38611238021df8cc69fc32f5e48" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>getStackName</name></member>
      <member refid="classHurricane_1_1JsonObject_1a947e1c3f8dbae63bb2d086b5b827a2a5" prot="public" virt="pure-virtual"><scope>Hurricane::JsonObject</scope><name>getTypeName</name></member>
      <member refid="classHurricane_1_1JsonObject_1ac0b8816eab2cbcabf18d5421a59aa780" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>has</name></member>
      <member refid="classHurricane_1_1JsonObject_1a4bb80844dcd175ad16cf92ee29064850" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>isBound</name></member>
      <member refid="classHurricane_1_1JsonObject_1a8f0949b75f5900e4ef87196e949cfa6b" prot="public" virt="virtual"><scope>Hurricane::JsonObject</scope><name>isDummy</name></member>
      <member refid="classHurricane_1_1JsonObject_1a267c55a1989a9907e25632d820681779" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>issetFlags</name></member>
      <member refid="classHurricane_1_1JsonObject_1a7a3fe903ceb00a3ebff66d1696edf682" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>jget</name></member>
      <member refid="classHurricane_1_1JsonObject_1a57d9c022204b30d4b253c2588f2c1215" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>JsonObject</name></member>
      <member refid="classHurricane_1_1JsonObject_1a3819d0c96ee99277e4cc8d349dc4155c" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>presetId</name></member>
      <member refid="classHurricane_1_1JsonObject_1aa5e7db69e2c7f5e5c4482357dae73082" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>print</name></member>
      <member refid="classHurricane_1_1JsonObject_1a6435e5a8655a6b42b61d55e7fd673c65" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>remove</name></member>
      <member refid="classHurricane_1_1JsonObject_1a8346b1c958574275fe17f9c4cb40ee8b" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>resetFlags</name></member>
      <member refid="classHurricane_1_1JsonObject_1a5216e5f5d74f8dbf8665eef8a78b2fe1" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>setFlags</name></member>
      <member refid="classHurricane_1_1JsonObject_1aeda98a478720cf29e532e2a11f6f54c5" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>setName</name></member>
      <member refid="classHurricane_1_1JsonObject_1aa8e23d2445b90cced19a97d50372314c" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>setObject</name></member>
      <member refid="classHurricane_1_1JsonObject_1a57a845ca64ac8912b35c4dbf75723af6" prot="public" virt="virtual"><scope>Hurricane::JsonObject</scope><name>toData</name></member>
      <member refid="classHurricane_1_1JsonObject_1ace589494452d9d797506286613642cd4" prot="public" virt="non-virtual"><scope>Hurricane::JsonObject</scope><name>update</name></member>
      <member refid="classHurricane_1_1JsonObject_1a05fded364c9bc8011097245e9186a106" prot="public" virt="virtual"><scope>Hurricane::JsonObject</scope><name>~JsonObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
